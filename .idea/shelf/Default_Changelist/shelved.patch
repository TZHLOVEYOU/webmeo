Index: ch21/src/main/java/edu/nf/ch21/job/DemoTask.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch21/src/main/java/edu/nf/ch21/job/DemoTask.java	(date 1607482622000)
+++ ch21/src/main/java/edu/nf/ch21/job/DemoTask.java	(date 1607482622000)
@@ -0,0 +1,38 @@
+package edu.nf.ch21.job;
+
+import edu.nf.ch21.service.TaskService;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.scheduling.annotation.Scheduled;
+import org.springframework.stereotype.Component;
+
+/**
+ * @author wangl
+ * @date 2020/12/9
+ * 定时任务处理类
+ */
+@Component
+public class DemoTask {
+
+    /**
+     * 定时任务需要反复执行TaskService中的业务逻辑，
+     * 因此将它注入进来
+     */
+    @Autowired
+    private TaskService taskService;
+
+    /**
+     * 定时备份
+     */
+    @Scheduled(cron = "0/3 * * * * ?")
+    public void executeBackup(){
+        taskService.backup();
+    }
+
+    /**
+     * 定时清理
+     */
+    @Scheduled(cron = "0/2 * * * * ?")
+    public void executeClean(){
+        taskService.clean();
+    }
+}
Index: ch15/src/test/java/edu/nf/ch15/test/AopTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch15/src/test/java/edu/nf/ch15/test/AopTest.java	(date 1607391606000)
+++ ch15/src/test/java/edu/nf/ch15/test/AopTest.java	(date 1607391606000)
@@ -0,0 +1,20 @@
+package edu.nf.ch15.test;
+
+import edu.nf.ch15.service.UserService;
+import org.junit.Test;
+import org.springframework.context.ApplicationContext;
+import org.springframework.context.support.ClassPathXmlApplicationContext;
+
+/**
+ * @author wangl
+ * @date 2020/12/8
+ */
+public class AopTest {
+
+    @Test
+    public void testAop(){
+        ApplicationContext context = new ClassPathXmlApplicationContext("applicationContext.xml");
+        UserService service = context.getBean("userService", UserService.class);
+        service.add();
+    }
+}
Index: ch15/src/main/java/edu/nf/ch15/service/UserService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch15/src/main/java/edu/nf/ch15/service/UserService.java	(date 1607388844000)
+++ ch15/src/main/java/edu/nf/ch15/service/UserService.java	(date 1607388844000)
@@ -0,0 +1,12 @@
+package edu.nf.ch15.service;
+
+/**
+ * @author wangl
+ * @date 2020/12/8
+ */
+public interface UserService {
+
+    void add();
+
+    void update();
+}
Index: ch21/src/main/java/edu/nf/ch21/config/AppConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch21/src/main/java/edu/nf/ch21/config/AppConfig.java	(date 1607483269000)
+++ ch21/src/main/java/edu/nf/ch21/config/AppConfig.java	(date 1607483269000)
@@ -0,0 +1,46 @@
+package edu.nf.ch21.config;
+
+import org.springframework.context.annotation.Bean;
+import org.springframework.context.annotation.ComponentScan;
+import org.springframework.context.annotation.Configuration;
+import org.springframework.scheduling.annotation.EnableScheduling;
+import org.springframework.scheduling.annotation.SchedulingConfigurer;
+import org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler;
+import org.springframework.scheduling.config.ScheduledTaskRegistrar;
+
+/**
+ * @author wangl
+ * @date 2020/12/9
+ * 配置类
+ */
+@Configuration
+@ComponentScan(basePackages = "edu.nf.ch21")
+//启用定时任务注解处理器
+@EnableScheduling
+//可以通过实现SchedulingConfigurer接口来配置线程池
+public class AppConfig implements SchedulingConfigurer {
+
+    /**
+     * 装配一个定时任务线程池
+     * @return
+     */
+    @Bean(destroyMethod = "shutdown")
+    public ThreadPoolTaskScheduler taskScheduler(){
+        ThreadPoolTaskScheduler poolTaskScheduler = new ThreadPoolTaskScheduler();
+        //设置线程池大小
+        poolTaskScheduler.setPoolSize(2);
+        //设置线程名称的前缀
+        poolTaskScheduler.setThreadNamePrefix("任务线程-");
+        return poolTaskScheduler;
+    }
+
+    /**
+     * 配置定时任务，设置线程池
+     * @param scheduledTaskRegistrar
+     */
+    @Override
+    public void configureTasks(ScheduledTaskRegistrar scheduledTaskRegistrar) {
+        //注册定时任务线程池
+        scheduledTaskRegistrar.setScheduler(taskScheduler());
+    }
+}
Index: ch21/src/main/java/edu/nf/ch21/service/impl/TaskServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch21/src/main/java/edu/nf/ch21/service/impl/TaskServiceImpl.java	(date 1607482478000)
+++ ch21/src/main/java/edu/nf/ch21/service/impl/TaskServiceImpl.java	(date 1607482478000)
@@ -0,0 +1,22 @@
+package edu.nf.ch21.service.impl;
+
+import edu.nf.ch21.service.TaskService;
+import org.springframework.stereotype.Service;
+
+/**
+ * @author wangl
+ * @date 2020/12/9
+ */
+@Service
+public class TaskServiceImpl implements TaskService {
+
+    @Override
+    public void backup() {
+        System.out.println(Thread.currentThread().getName() + "执行备份...");
+    }
+
+    @Override
+    public void clean() {
+        System.out.println(Thread.currentThread().getName() + "执行清理...");
+    }
+}
Index: ch16/src/main/java/edu/nf/ch16/service/impl/UserServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch16/src/main/java/edu/nf/ch16/service/impl/UserServiceImpl.java	(date 1607395632000)
+++ ch16/src/main/java/edu/nf/ch16/service/impl/UserServiceImpl.java	(date 1607395632000)
@@ -0,0 +1,16 @@
+package edu.nf.ch16.service.impl;
+
+import edu.nf.ch16.service.UserService;
+
+/**
+ * @author wangl
+ * @date 2020/12/8
+ */
+public class UserServiceImpl implements UserService {
+
+    @Override
+    public String add(String name) {
+        System.out.println("添加用户信息, " + name);
+        return "success";
+    }
+}
Index: ch21/src/main/java/edu/nf/ch21/service/TaskService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch21/src/main/java/edu/nf/ch21/service/TaskService.java	(date 1607482253000)
+++ ch21/src/main/java/edu/nf/ch21/service/TaskService.java	(date 1607482253000)
@@ -0,0 +1,19 @@
+package edu.nf.ch21.service;
+
+/**
+ * @author wangl
+ * @date 2020/12/9
+ * 定时任务处理服务
+ */
+public interface TaskService {
+
+    /**
+     * 定时备份
+     */
+    void backup();
+
+    /**
+     * 定时清理
+     */
+    void clean();
+}
Index: ch21/src/test/java/edu/nf/ch21/test/TaskTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch21/src/test/java/edu/nf/ch21/test/TaskTest.java	(date 1607483153000)
+++ ch21/src/test/java/edu/nf/ch21/test/TaskTest.java	(date 1607483153000)
@@ -0,0 +1,19 @@
+package edu.nf.ch21.test;
+
+import edu.nf.ch21.config.AppConfig;
+import org.junit.Test;
+import org.springframework.context.ApplicationContext;
+import org.springframework.context.annotation.AnnotationConfigApplicationContext;
+
+/**
+ * @author wangl
+ * @date 2020/12/9
+ */
+public class TaskTest {
+
+    @Test
+    public void testTask(){
+        ApplicationContext context = new AnnotationConfigApplicationContext(AppConfig.class);
+        while (true);
+    }
+}
Index: ch16/src/main/java/edu/nf/ch16/aspect/UserServiceAspect.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch16/src/main/java/edu/nf/ch16/aspect/UserServiceAspect.java	(date 1607397052000)
+++ ch16/src/main/java/edu/nf/ch16/aspect/UserServiceAspect.java	(date 1607397052000)
@@ -0,0 +1,68 @@
+package edu.nf.ch16.aspect;
+
+import org.aspectj.lang.JoinPoint;
+import org.aspectj.lang.ProceedingJoinPoint;
+import org.aspectj.lang.reflect.MethodSignature;
+
+import java.lang.reflect.Method;
+
+/**
+ * @author wangl
+ * @date 2020/12/8
+ * 定义切面
+ */
+public class UserServiceAspect {
+
+    /**
+     * 前置通知
+     * @param jp 连接点实例, 可以获取目标方法信息
+     */
+    public void before(JoinPoint jp){
+        System.out.println("前置通知，目标方法参数：" + jp.getArgs()[0]);
+    }
+
+    /**
+     * 环绕通知
+     * @param pjp 连接点实例， 继承自JoinPoint
+     *            可以获取目标方法方法参数、方法信息等，
+     *            以及调用目标方法
+     * @return
+     */
+    public Object around(ProceedingJoinPoint pjp) throws Throwable {
+        System.out.println("环绕通知前");
+        //获取目标方法的Method对象
+        MethodSignature ms = (MethodSignature) pjp.getSignature();
+        Method method = ms.getMethod();
+        System.out.println("当前调用的目标方法：" + method.getName());
+        //调用目标方法
+        Object returnVal = pjp.proceed();
+        System.out.println("环绕通知后");
+        return returnVal;
+    }
+
+    /**
+     * 后置通知, 一旦产生异常，后置通知不会被执行
+     * @param jp 连接点实例
+     * @param returnVal 目标方法的返回值
+     */
+    public void afterReturning(JoinPoint jp, String returnVal){
+        System.out.println("后置通知，返回值：" + returnVal);
+    }
+
+    /**
+     * 异常通知
+     * @param jp 连接点实例
+     * @param e 目标方法产生的异常对象
+     */
+    public void afterThrowing(JoinPoint jp, Exception e){
+        System.out.println("异常通知,异常信息：" + e.getMessage());
+    }
+
+    /**
+     * 最终通知，不管有没有异常产生都会执行最终通知
+     * @param jp
+     */
+    public void after(JoinPoint jp){
+        System.out.println("最终通知");
+    }
+}
Index: ch02/src/main/resources/beans.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch02/src/main/resources/beans.xml	(date 1606703899000)
+++ ch02/src/main/resources/beans.xml	(date 1606703899000)
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
+
+    <!-- 装配people, scope属性用于指定bean在容器中的作用范围，默认是单例（singleton）的，
+         也就是容器中只有一个bean的实例。这样，每次从容器中获取bean时
+         返回的都是同一个对象。如果想容器每次返回不同的实例，那么就设置为prototype。
+         在web环境中，scope还有request和session等作用域的设置，表示bean在请求范围
+         还是会话范围内有效-->
+    <bean id="people" class="edu.nf.ch02.People" scope="prototype"/>
+
+</beans>
\ No newline at end of file
Index: ch12/src/main/java/edu/nf/ch12/dao/impl/UserDaoImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch12/src/main/java/edu/nf/ch12/dao/impl/UserDaoImpl.java	(date 1607046983000)
+++ ch12/src/main/java/edu/nf/ch12/dao/impl/UserDaoImpl.java	(date 1607046983000)
@@ -0,0 +1,23 @@
+package edu.nf.ch12.dao.impl;
+
+import edu.nf.ch12.dao.UserDao;
+
+/**
+ * @author wangl
+ * @date 2020/12/4
+ */
+public class UserDaoImpl implements UserDao {
+
+    @Override
+    public void add() {
+        System.out.println("insert into user_info..");
+    }
+
+    public void init(){
+        System.out.println("执行UserDao的init方法");
+    }
+
+    public void destroy(){
+        System.out.println("执行UserDao的destroy方法");
+    }
+}
Index: ch15/src/main/resources/applicationContext.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch15/src/main/resources/applicationContext.xml	(date 1607392386000)
+++ ch15/src/main/resources/applicationContext.xml	(date 1607392386000)
@@ -0,0 +1,25 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">
+
+    <!-- 装配业务层对象 -->
+    <bean id="userService" class="edu.nf.ch15.service.impl.UserServiceImpl"/>
+    <!-- 配置切面-->
+    <bean id="userServiceAspect" class="edu.nf.ch15.aspect.UserServiceAspect"/>
+    <!-- aop配置, proxy-target-class设置为true表示强制使用cglib生成代理-->
+    <aop:config proxy-target-class="true">
+        <!-- 配置切入点，spring使用了AspectJ的切入点表达式来配置切入点。
+        通过切入点表达式可以定位到需要增强的目标方法，这些目标方称之为连接点-->
+        <!-- 表达式语法：execution(访问修饰符 包名.类名.方法名(参数类型))。
+             方法参数可以指定参数类型，也可以使用".."来表示任意类型和个数的参数。
+             注意：execution表达式是切入到方法级别-->
+        <aop:pointcut id="myPointcut" expression="execution(* edu.nf.ch15.service.impl.*.*(..))"/>
+        <!-- 也可以使用within表达式，它是其融入到类级别-->
+        <!--<aop:pointcut id="myPointcut2" expression="within(edu.nf.ch15.service.impl.*)"/>-->
+        <!-- 配置Advisor（通知器，也就是切面
+             advice-ref指定上面切面的id
+             pointcut-ref指定切入点的id-->
+        <aop:advisor advice-ref="userServiceAspect" pointcut-ref="myPointcut"/>
+    </aop:config>
+</beans>
\ No newline at end of file
Index: ch02/src/main/java/edu/nf/ch02/People.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch02/src/main/java/edu/nf/ch02/People.java	(date 1606701513000)
+++ ch02/src/main/java/edu/nf/ch02/People.java	(date 1606701513000)
@@ -0,0 +1,12 @@
+package edu.nf.ch02;
+
+/**
+ * @author wangl
+ * @date 2020/11/30
+ */
+public class People {
+
+    public void say(){
+        System.out.println("Hello world");
+    }
+}
Index: ch12/src/main/java/edu/nf/ch12/dao/UserDao.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch12/src/main/java/edu/nf/ch12/dao/UserDao.java	(date 1607046344000)
+++ ch12/src/main/java/edu/nf/ch12/dao/UserDao.java	(date 1607046344000)
@@ -0,0 +1,13 @@
+package edu.nf.ch12.dao;
+
+/**
+ * @author wangl
+ * @date 2020/12/4
+ */
+public interface UserDao {
+
+    /**
+     * 添加
+     */
+    void add();
+}
Index: ch12/src/main/java/edu/nf/ch12/config/SpringConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch12/src/main/java/edu/nf/ch12/config/SpringConfig.java	(date 1607050309000)
+++ ch12/src/main/java/edu/nf/ch12/config/SpringConfig.java	(date 1607050309000)
@@ -0,0 +1,77 @@
+package edu.nf.ch12.config;
+
+import edu.nf.ch12.controller.UserController;
+import edu.nf.ch12.dao.UserDao;
+import edu.nf.ch12.dao.impl.UserDaoImpl;
+import edu.nf.ch12.service.UserService;
+import edu.nf.ch12.service.impl.StuServiceImpl;
+import edu.nf.ch12.service.impl.UserServiceImpl;
+import org.springframework.beans.factory.annotation.Qualifier;
+import org.springframework.context.annotation.*;
+
+/**
+ * @author wangl
+ * @date 2020/12/4
+ */
+@Configuration
+//使用配置类同样可以进行扫描，这时扫描的Bean
+//和配置类使用@Bean注解配置的bean一同纳入IOC容器中
+@ComponentScan(basePackages = "edu.nf.ch12")
+public class SpringConfig {
+
+    /**
+     * 装配dao
+     * 使用@Bean注解来装配
+     * 方法名默认就是bean的id，可以通过name属性重新自定义
+     */
+    @Bean(name = "dao", initMethod = "init", destroyMethod = "destroy")
+    //@Scope注解也可以声明在方法上
+    //@Scope("singleton")
+    //@Primary注解也可以标注在方法上，表示优先注入这个bean
+    //@Primary
+    public UserDaoImpl userDao(){
+        return new UserDaoImpl();
+    }
+
+    /**
+     * 装配service
+     */
+    @Bean
+    public UserService userService(UserDao userDao){
+        UserServiceImpl service = new UserServiceImpl();
+        //手动调用set方法进行注入
+        //方式一：调用userDao的方法获取dao的bean进行注入
+        //service.setUserDao(userDao());
+        //方式二：通过Spring传进来的参数进行注入
+        service.setUserDao(userDao);
+        return service;
+    }
+
+    /**
+     * 装配StuServiceImpl
+     * @param userDao
+     * @return
+     */
+    @Bean
+    public UserService stuService(UserDao userDao){
+        StuServiceImpl service = new StuServiceImpl();
+        //注入userDao
+        service.setUserDao(userDao);
+        return service;
+    }
+
+    /**
+     * 装配Controller
+     * 当有多个实现类时，会先根据参数的变量名称作为id到容器中查找
+     * 如果找到则直接传入进来注入，找不到则引发异常。
+     * 因此可以结合@Qualifier注解，标识在参数上
+     * @return
+     */
+    @Bean
+    public UserController userController(@Qualifier("stuService") UserService service){
+        UserController controller = new UserController();
+        //注入UserService
+        controller.setService(service);
+        return controller;
+    }
+}
Index: ch16/src/main/java/edu/nf/ch16/service/UserService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch16/src/main/java/edu/nf/ch16/service/UserService.java	(date 1607395627000)
+++ ch16/src/main/java/edu/nf/ch16/service/UserService.java	(date 1607395627000)
@@ -0,0 +1,10 @@
+package edu.nf.ch16.service;
+
+/**
+ * @author wangl
+ * @date 2020/12/8
+ */
+public interface UserService {
+
+    String add(String name);
+}
Index: ch12/src/main/java/edu/nf/ch12/service/impl/UserServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch12/src/main/java/edu/nf/ch12/service/impl/UserServiceImpl.java	(date 1607049808000)
+++ ch12/src/main/java/edu/nf/ch12/service/impl/UserServiceImpl.java	(date 1607049808000)
@@ -0,0 +1,23 @@
+package edu.nf.ch12.service.impl;
+
+import edu.nf.ch12.dao.UserDao;
+import edu.nf.ch12.service.UserService;
+
+/**
+ * @author wangl
+ * @date 2020/12/4
+ */
+public class UserServiceImpl implements UserService {
+
+    private UserDao userDao;
+
+    public void setUserDao(UserDao userDao) {
+        this.userDao = userDao;
+    }
+
+    @Override
+    public void save() {
+        System.out.println("执行UserServiceImpl");
+        userDao.add();
+    }
+}
Index: ch16/src/main/resources/applicationContext.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch16/src/main/resources/applicationContext.xml	(date 1607396869000)
+++ ch16/src/main/resources/applicationContext.xml	(date 1607396869000)
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">
+
+    <!-- 装配业务层对象 -->
+    <bean id="userService" class="edu.nf.ch16.service.impl.UserServiceImpl"/>
+    <!-- 装配切面类-->
+    <bean id="userServiceAspect" class="edu.nf.ch16.aspect.UserServiceAspect"/>
+    <!-- 配置aop-->
+    <aop:config>
+        <!-- 定义切入点 -->
+        <aop:pointcut id="myPointcut" expression="execution(* edu.nf.ch16.service.impl.*.*(..))"/>
+        <!-- 配置切面, ref引用上面切面的id-->
+        <aop:aspect ref="userServiceAspect">
+            <!-- 配置各种通知, method指定切面类中对应的方法名，
+                 pointcut-ref引用切入点的id
+                 通常pointcut-ref引用的都是同一个切入点表达式，
+                 当某个通知想要自定义切点表达式的时候，
+                 可以通过pointcut属性重新自定义， 例如：pointcut="execution(...)"-->
+            <aop:before method="before" pointcut-ref="myPointcut"/>
+            <aop:around method="around" pointcut-ref="myPointcut"/>
+            <!-- 后置通知中的returning对应的是afterReturning方法的返回值参数名（名称要一致） -->
+            <aop:after-returning method="afterReturning" pointcut-ref="myPointcut" returning="returnVal"/>
+            <!-- 异常通知中的throwing对应afterThrowing方法的异常参数名（名称要一致）-->
+            <aop:after-throwing method="afterThrowing" pointcut-ref="myPointcut" throwing="e"/>
+            <aop:after method="after" pointcut-ref="myPointcut"/>
+        </aop:aspect>
+    </aop:config>
+</beans>
\ No newline at end of file
Index: ch12/src/main/java/edu/nf/ch12/service/UserService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch12/src/main/java/edu/nf/ch12/service/UserService.java	(date 1607046453000)
+++ ch12/src/main/java/edu/nf/ch12/service/UserService.java	(date 1607046453000)
@@ -0,0 +1,13 @@
+package edu.nf.ch12.service;
+
+/**
+ * @author wangl
+ * @date 2020/12/4
+ */
+public interface UserService {
+
+    /**
+     * 添加用户
+     */
+    void save();
+}
Index: ch12/src/main/java/edu/nf/ch12/controller/TestController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch12/src/main/java/edu/nf/ch12/controller/TestController.java	(date 1607050102000)
+++ ch12/src/main/java/edu/nf/ch12/controller/TestController.java	(date 1607050102000)
@@ -0,0 +1,15 @@
+package edu.nf.ch12.controller;
+
+import org.springframework.stereotype.Controller;
+
+/**
+ * @author wangl
+ * @date 2020/12/4
+ */
+@Controller
+public class TestController {
+
+    public void test(){
+        System.out.println("Hello world");
+    }
+}
Index: ch16/src/test/java/edu/nf/ch16/test/SpringTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch16/src/test/java/edu/nf/ch16/test/SpringTest.java	(date 1607397024000)
+++ ch16/src/test/java/edu/nf/ch16/test/SpringTest.java	(date 1607397024000)
@@ -0,0 +1,20 @@
+package edu.nf.ch16.test;
+
+import edu.nf.ch16.service.UserService;
+import org.junit.Test;
+import org.springframework.context.ApplicationContext;
+import org.springframework.context.support.ClassPathXmlApplicationContext;
+
+/**
+ * @author wangl
+ * @date 2020/12/8
+ */
+public class SpringTest {
+
+    @Test
+    public void testAop(){
+        ApplicationContext context = new ClassPathXmlApplicationContext("applicationContext.xml");
+        UserService service = context.getBean("userService", UserService.class);
+        service.add("user1");
+    }
+}
Index: ch12/src/main/java/edu/nf/ch12/service/impl/StuServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch12/src/main/java/edu/nf/ch12/service/impl/StuServiceImpl.java	(date 1607049831000)
+++ ch12/src/main/java/edu/nf/ch12/service/impl/StuServiceImpl.java	(date 1607049831000)
@@ -0,0 +1,23 @@
+package edu.nf.ch12.service.impl;
+
+import edu.nf.ch12.dao.UserDao;
+import edu.nf.ch12.service.UserService;
+
+/**
+ * @author wangl
+ * @date 2020/12/4
+ */
+public class StuServiceImpl implements UserService {
+
+    private UserDao userDao;
+
+    public void setUserDao(UserDao userDao) {
+        this.userDao = userDao;
+    }
+
+    @Override
+    public void save() {
+        System.out.println("执行StuServiceImpl");
+        userDao.add();
+    }
+}
Index: ch12/src/main/java/edu/nf/ch12/controller/UserController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch12/src/main/java/edu/nf/ch12/controller/UserController.java	(date 1607047690000)
+++ ch12/src/main/java/edu/nf/ch12/controller/UserController.java	(date 1607047690000)
@@ -0,0 +1,20 @@
+package edu.nf.ch12.controller;
+
+import edu.nf.ch12.service.UserService;
+
+/**
+ * @author wangl
+ * @date 2020/12/4
+ */
+public class UserController {
+
+    private UserService service;
+
+    public void setService(UserService service) {
+        this.service = service;
+    }
+
+    public void add(){
+        service.save();
+    }
+}
Index: ch07/src/main/java/edu/nf/ch07/demo1/UserService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch07/src/main/java/edu/nf/ch07/demo1/UserService.java	(date 1606873284000)
+++ ch07/src/main/java/edu/nf/ch07/demo1/UserService.java	(date 1606873284000)
@@ -0,0 +1,10 @@
+package edu.nf.ch07.demo1;
+
+/**
+ * @author wangl
+ * @date 2020/12/2
+ */
+public interface UserService {
+
+    void add();
+}
Index: ch07/src/main/java/edu/nf/ch07/demo1/MyFactoryBean.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch07/src/main/java/edu/nf/ch07/demo1/MyFactoryBean.java	(date 1606874534000)
+++ ch07/src/main/java/edu/nf/ch07/demo1/MyFactoryBean.java	(date 1606874534000)
@@ -0,0 +1,38 @@
+package edu.nf.ch07.demo1;
+
+import edu.nf.ch07.demo1.impl.UserServiceImpl;
+import org.springframework.beans.factory.FactoryBean;
+
+/**
+ * @author wangl
+ * @date 2020/12/2
+ * 自定义FactoryBean， 用于创建自定义对象
+ * Spring容器会调用FactoryBean的getObject方法，将返回的
+ * 对象自动纳入IOC容器中
+ */
+public class MyFactoryBean implements FactoryBean<UserService> {
+
+    /**
+     * 返回的是具体的某个实现类的bean
+     * @return
+     * @throws Exception
+     */
+    @Override
+    public UserService getObject() throws Exception {
+        return new UserServiceImpl();
+    }
+
+    /**
+     * 返回的是Bean的类型
+     * @return
+     */
+    @Override
+    public Class<?> getObjectType() {
+        return UserServiceImpl.class;
+    }
+
+    @Override
+    public boolean isSingleton() {
+        return true;
+    }
+}
Index: ch02/src/test/java/edu/nf/ch02/test/SpringTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch02/src/test/java/edu/nf/ch02/test/SpringTest.java	(date 1606701953000)
+++ ch02/src/test/java/edu/nf/ch02/test/SpringTest.java	(date 1606701953000)
@@ -0,0 +1,23 @@
+package edu.nf.ch02.test;
+
+import edu.nf.ch02.People;
+import org.junit.Test;
+import org.springframework.context.ApplicationContext;
+import org.springframework.context.support.ClassPathXmlApplicationContext;
+
+/**
+ * @author wangl
+ * @date 2020/11/30
+ */
+public class SpringTest {
+
+    @Test
+    public void testBeanScope(){
+        ApplicationContext context = new ClassPathXmlApplicationContext("beans.xml");
+        People people = context.getBean("people", People.class);
+        People people1 = context.getBean("people", People.class);
+        System.out.println(people);
+        System.out.println(people1);
+        //people.say();
+    }
+}
Index: ch12/src/test/java/edu/nf/ch12/test/SpringTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch12/src/test/java/edu/nf/ch12/test/SpringTest.java	(date 1607047860000)
+++ ch12/src/test/java/edu/nf/ch12/test/SpringTest.java	(date 1607047860000)
@@ -0,0 +1,21 @@
+package edu.nf.ch12.test;
+
+import edu.nf.ch12.config.SpringConfig;
+import edu.nf.ch12.controller.UserController;
+import org.junit.Test;
+import org.springframework.context.ApplicationContext;
+import org.springframework.context.annotation.AnnotationConfigApplicationContext;
+
+/**
+ * @author wangl
+ * @date 2020/12/4
+ */
+public class SpringTest {
+
+    @Test
+    public void testConfig(){
+        ApplicationContext context = new AnnotationConfigApplicationContext(SpringConfig.class);
+        UserController controller = context.getBean("userController", UserController.class);
+        controller.add();
+    }
+}
Index: ch07/src/main/resources/beans.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch07/src/main/resources/beans.xml	(date 1606874429000)
+++ ch07/src/main/resources/beans.xml	(date 1606874429000)
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
+
+    <!-- 配置FactoryBean, 在调用容器的getBean方法时，
+    返回的不是MyFactoryBean本身的实例，而是由MyFactoryBean的getObject
+    方法返回的对象-->
+    <bean id="userService" class="edu.nf.ch07.demo1.MyFactoryBean"/>
+</beans>
\ No newline at end of file
Index: ch07/src/main/java/edu/nf/ch07/demo1/impl/UserServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch07/src/main/java/edu/nf/ch07/demo1/impl/UserServiceImpl.java	(date 1606873321000)
+++ ch07/src/main/java/edu/nf/ch07/demo1/impl/UserServiceImpl.java	(date 1606873321000)
@@ -0,0 +1,15 @@
+package edu.nf.ch07.demo1.impl;
+
+import edu.nf.ch07.demo1.UserService;
+
+/**
+ * @author wangl
+ * @date 2020/12/2
+ */
+public class UserServiceImpl implements UserService {
+
+    @Override
+    public void add() {
+        System.out.println("Save user...");
+    }
+}
Index: ch02/target/classes/beans.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch02/target/classes/beans.xml	(date 1607308686000)
+++ ch02/target/classes/beans.xml	(date 1607308686000)
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
+
+    <!-- 装配people, scope属性用于指定bean在容器中的作用范围，默认是单例（singleton）的，
+         也就是容器中只有一个bean的实例。这样，每次从容器中获取bean时
+         返回的都是同一个对象。如果想容器每次返回不同的实例，那么就设置为prototype。
+         在web环境中，scope还有request和session等作用域的设置，表示bean在请求范围
+         还是会话范围内有效-->
+    <bean id="people" class="edu.nf.ch02.People" scope="prototype"/>
+
+</beans>
\ No newline at end of file
Index: ch07/src/test/java/edu/nf/ch07/test/SpringTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch07/src/test/java/edu/nf/ch07/test/SpringTest.java	(date 1606874504000)
+++ ch07/src/test/java/edu/nf/ch07/test/SpringTest.java	(date 1606874504000)
@@ -0,0 +1,22 @@
+package edu.nf.ch07.test;
+
+import edu.nf.ch07.demo1.UserService;
+import org.junit.Test;
+import org.springframework.context.ApplicationContext;
+import org.springframework.context.support.ClassPathXmlApplicationContext;
+
+/**
+ * @author wangl
+ * @date 2020/12/2
+ */
+public class SpringTest {
+
+    @Test
+    public void testFactoryBean(){
+        ApplicationContext context = new ClassPathXmlApplicationContext("beans.xml");
+        UserService service1 = context.getBean("userService", UserService.class);
+        UserService service2 = context.getBean("userService", UserService.class);
+        System.out.println(service1);
+        System.out.println(service2);
+    }
+}
Index: ch07/target/classes/beans.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch07/target/classes/beans.xml	(date 1606874512000)
+++ ch07/target/classes/beans.xml	(date 1606874512000)
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
+
+    <!-- 配置FactoryBean, 在调用容器的getBean方法时，
+    返回的不是MyFactoryBean本身的实例，而是由MyFactoryBean的getObject
+    方法返回的对象-->
+    <bean id="userService" class="edu.nf.ch07.demo1.MyFactoryBean"/>
+</beans>
\ No newline at end of file
Index: ch18/src/test/java/edu/nf/ch18/test/SpringTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch18/src/test/java/edu/nf/ch18/test/SpringTest.java	(date 1607475536000)
+++ ch18/src/test/java/edu/nf/ch18/test/SpringTest.java	(date 1607475536000)
@@ -0,0 +1,21 @@
+package edu.nf.ch18.test;
+
+import edu.nf.ch18.config.SpringConfig;
+import edu.nf.ch18.service.StuService;
+import org.junit.Test;
+import org.springframework.context.ApplicationContext;
+import org.springframework.context.annotation.AnnotationConfigApplicationContext;
+
+/**
+ * @author wangl
+ * @date 2020/12/9
+ */
+public class SpringTest {
+
+    @Test
+    public void testAop(){
+        ApplicationContext context = new AnnotationConfigApplicationContext(SpringConfig.class);
+        StuService service = context.getBean("stuService", StuService.class);
+        service.save("user1");
+    }
+}
Index: ch13/src/main/java/edu/nf/ch13/UserServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch13/src/main/java/edu/nf/ch13/UserServiceImpl.java	(date 1607304650000)
+++ ch13/src/main/java/edu/nf/ch13/UserServiceImpl.java	(date 1607304650000)
@@ -0,0 +1,23 @@
+package edu.nf.ch13;
+
+/**
+ * @author wangl
+ * @date 2020/12/7
+ */
+public class UserServiceImpl implements UserService{
+
+    @Override
+    public void add() {
+        System.out.println("添加用户");
+    }
+
+    @Override
+    public void update() {
+        System.out.println("更新用户");
+    }
+
+    @Override
+    public void getUser() {
+        System.out.println("查询用户");
+    }
+}
Index: ch13/src/main/java/edu/nf/ch13/StuService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch13/src/main/java/edu/nf/ch13/StuService.java	(date 1607306068000)
+++ ch13/src/main/java/edu/nf/ch13/StuService.java	(date 1607306068000)
@@ -0,0 +1,20 @@
+package edu.nf.ch13;
+
+/**
+ * @author wangl
+ * @date 2020/12/7
+ */
+public class StuService {
+
+    public void add(){
+        System.out.println("添加学生信息");
+    }
+
+    public void update(){
+        System.out.println("修改学生信息");
+    }
+
+    public void delete(){
+        System.out.println("删除学生信息");
+    }
+}
Index: ch18/src/main/java/edu/nf/ch18/service/StuService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch18/src/main/java/edu/nf/ch18/service/StuService.java	(date 1607475127000)
+++ ch18/src/main/java/edu/nf/ch18/service/StuService.java	(date 1607475127000)
@@ -0,0 +1,15 @@
+package edu.nf.ch18.service;
+
+/**
+ * @author wangl
+ * @date 2020/12/8
+ */
+public interface StuService {
+
+    /**
+     * 保存学生信息
+     * @param name
+     * @return
+     */
+    String save(String name);
+}
Index: ch13/src/main/java/edu/nf/ch13/jdk/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch13/src/main/java/edu/nf/ch13/jdk/Main.java	(date 1607305626000)
+++ ch13/src/main/java/edu/nf/ch13/jdk/Main.java	(date 1607305626000)
@@ -0,0 +1,32 @@
+package edu.nf.ch13.jdk;
+
+import edu.nf.ch13.UserService;
+import edu.nf.ch13.UserServiceImpl;
+
+import java.lang.reflect.InvocationHandler;
+import java.lang.reflect.Proxy;
+
+/**
+ * @author wangl
+ * @date 2020/12/7
+ */
+public class Main {
+
+    public static void main(String[] args) {
+        //创建JDK动态代理需要满足的三个必要条件
+        //1.创建回调处理器,并传入目标对象
+        InvocationHandler handler = new LogInvocationHandler(new UserServiceImpl());
+        //2.获取一个类加载器，用于加载动态创建出来的代理字节码,
+        // 加载成功后将自动创建出一个代理实例
+        ClassLoader loader = Main.class.getClassLoader();
+        //3.获取目标对象所实现的接口的Class
+        Class<?>[] infClasses = UserServiceImpl.class.getInterfaces();
+        //使用Proxy类来创建代理对象, 并且创建出来的代理对象会自动实现上面的接口
+        UserService userService = (UserService) Proxy.newProxyInstance(loader, infClasses, handler);
+        //调用代理对象
+        userService.add();
+        userService.update();
+        userService.getUser();
+
+    }
+}
Index: ch03/src/main/java/edu/nf/ch03/People.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch03/src/main/java/edu/nf/ch03/People.java	(date 1606704069000)
+++ ch03/src/main/java/edu/nf/ch03/People.java	(date 1606704069000)
@@ -0,0 +1,12 @@
+package edu.nf.ch03;
+
+/**
+ * @author wangl
+ * @date 2020/11/30
+ */
+public class People {
+
+    public void say(){
+        System.out.println("Hello world");
+    }
+}
Index: ch13/src/main/java/edu/nf/ch13/UserService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch13/src/main/java/edu/nf/ch13/UserService.java	(date 1607304606000)
+++ ch13/src/main/java/edu/nf/ch13/UserService.java	(date 1607304606000)
@@ -0,0 +1,15 @@
+package edu.nf.ch13;
+
+/**
+ * @author wangl
+ * @date 2020/12/7
+ */
+public interface UserService {
+
+    void add();
+
+    void update();
+
+    void getUser();
+
+}
Index: ch13/src/main/java/edu/nf/ch13/cglib/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch13/src/main/java/edu/nf/ch13/cglib/Main.java	(date 1607307143000)
+++ ch13/src/main/java/edu/nf/ch13/cglib/Main.java	(date 1607307143000)
@@ -0,0 +1,26 @@
+package edu.nf.ch13.cglib;
+
+import edu.nf.ch13.StuService;
+import net.sf.cglib.proxy.Enhancer;
+
+/**
+ * @author wangl
+ * @date 2020/12/7
+ */
+public class Main {
+
+    public static void main(String[] args) {
+        //创建一个增强器，用于创建代理实例
+        Enhancer eh = new Enhancer();
+        //设置父类，在运行时动态创建子类代理对象
+        eh.setSuperclass(StuService.class);
+        //设置方法拦截器
+        eh.setCallback(new LogInterceptor());
+        //创建代理
+        StuService service = (StuService) eh.create();
+        //调用子类代理
+        service.add();
+        service.update();
+        service.delete();
+    }
+}
Index: ch03/src/main/resources/beans.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch03/src/main/resources/beans.xml	(date 1606704878000)
+++ ch03/src/main/resources/beans.xml	(date 1606704878000)
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
+
+    <!-- id属性表示bean在容器中的唯一标识，是不可重复的，
+     还有另一个name属性，用于指定bean在容器中的别名，
+     并且别名是可以指定多个（多个别名之间用逗号或者空格隔开），
+     因此在获取bean对象时可以根据id获取，也可以根据name来获取都是可以的。
+     需要注意的是，当没有指定id但是指定了name属性时，name属性的第一个别名将
+     自动设置为id-->
+    <bean id="people" name="p1,p2,p3" class="edu.nf.ch03.People"/>
+</beans>
\ No newline at end of file
Index: ch13/src/main/java/edu/nf/ch13/jdk/LogInvocationHandler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch13/src/main/java/edu/nf/ch13/jdk/LogInvocationHandler.java	(date 1607305957000)
+++ ch13/src/main/java/edu/nf/ch13/jdk/LogInvocationHandler.java	(date 1607305957000)
@@ -0,0 +1,48 @@
+package edu.nf.ch13.jdk;
+
+import java.lang.reflect.InvocationHandler;
+import java.lang.reflect.Method;
+
+/**
+ * @author wangl
+ * @date 2020/12/7
+ * 回调处理器，负责调用目标对象的方法，
+ * 因此可以在调用前后执行一些额外的逻辑
+ */
+public class LogInvocationHandler implements InvocationHandler {
+
+    private Object target;
+
+    /**
+     * 通过构造方法传入一个目标对象
+     * @param target
+     */
+    public LogInvocationHandler(Object target) {
+        this.target = target;
+    }
+
+    /**
+     *
+     * @param proxy 运行时创建的代理对象
+     * @param method 当前目标对象正在调用的方法
+     * @param args 目标方法所需要的参数
+     * @return
+     * @throws Throwable
+     */
+    @Override
+    public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {
+
+        //调用当前目标对象的方法，需要传入一个目标对象的实例
+        Object returnVal = method.invoke(target, args);
+        //在目标方法执行完后调用日志方法记录操作
+        log();
+        return returnVal;
+    }
+
+    /**
+     * 记录日志的逻辑
+     */
+    private void log(){
+        System.out.println("执行日志记录操作...");
+    }
+}
Index: ch13/src/main/java/edu/nf/ch13/cglib/LogInterceptor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch13/src/main/java/edu/nf/ch13/cglib/LogInterceptor.java	(date 1607306915000)
+++ ch13/src/main/java/edu/nf/ch13/cglib/LogInterceptor.java	(date 1607306915000)
@@ -0,0 +1,36 @@
+package edu.nf.ch13.cglib;
+
+
+import net.sf.cglib.proxy.MethodInterceptor;
+import net.sf.cglib.proxy.MethodProxy;
+
+import java.lang.reflect.Method;
+
+/**
+ * @author wangl
+ * @date 2020/12/7
+ */
+public class LogInterceptor implements MethodInterceptor {
+
+    /**
+     *
+     * @param proxy 运行时创建的代理对象
+     * @param method 当前目标对象正在调用的方法
+     * @param args 目标对象方法所需要的参数
+     * @param methodProxy 代理方法（也就是生成的子类中方法）
+     * @return
+     * @throws Throwable
+     */
+    @Override
+    public Object intercept(Object proxy, Method method, Object[] args, MethodProxy methodProxy) throws Throwable {
+        //调用目标对象的方法（也就是父类的方法）
+        Object returnVal = methodProxy.invokeSuper(proxy, args);
+        //执行日志记录操作
+        log();
+        return returnVal;
+    }
+
+    private void log(){
+        System.out.println("记录日志操作...");
+    }
+}
Index: ch03/src/test/java/edu/nf/ch03/test/SpringTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch03/src/test/java/edu/nf/ch03/test/SpringTest.java	(date 1606704753000)
+++ ch03/src/test/java/edu/nf/ch03/test/SpringTest.java	(date 1606704753000)
@@ -0,0 +1,26 @@
+package edu.nf.ch03.test;
+
+import edu.nf.ch03.People;
+import org.junit.Test;
+import org.springframework.context.ApplicationContext;
+import org.springframework.context.support.ClassPathXmlApplicationContext;
+
+/**
+ * @author wangl
+ * @date 2020/11/30
+ */
+public class SpringTest {
+
+    @Test
+    public void testIdAndName(){
+        ApplicationContext context = new ClassPathXmlApplicationContext("beans.xml");
+        //根据id获取bean实例
+        People people = context.getBean("people", People.class);
+        System.out.println(people);
+        //根据name别名获取bean实例
+        People p1 = context.getBean("p1", People.class);
+        People p2 = context.getBean("p2", People.class);
+        System.out.println(p1);
+        System.out.println(p2);
+    }
+}
Index: ch03/target/classes/beans.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch03/target/classes/beans.xml	(date 1607308685000)
+++ ch03/target/classes/beans.xml	(date 1607308685000)
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
+
+    <!-- id属性表示bean在容器中的唯一标识，是不可重复的，
+     还有另一个name属性，用于指定bean在容器中的别名，
+     并且别名是可以指定多个（多个别名之间用逗号或者空格隔开），
+     因此在获取bean对象时可以根据id获取，也可以根据name来获取都是可以的。
+     需要注意的是，当没有指定id但是指定了name属性时，name属性的第一个别名将
+     自动设置为id-->
+    <bean id="people" name="p1,p2,p3" class="edu.nf.ch03.People"/>
+</beans>
\ No newline at end of file
Index: ch14/src/main/resources/applicationContext.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch14/src/main/resources/applicationContext.xml	(date 1607325017000)
+++ ch14/src/main/resources/applicationContext.xml	(date 1607325017000)
@@ -0,0 +1,38 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
+
+    <!-- 装配业务层对象 -->
+    <bean id="userService" class="edu.nf.ch14.service.impl.UserServiceImpl"/>
+    <bean id="stuService" class="edu.nf.ch14.service.StuService"/>
+
+    <!-- 装配切面，将切面纳入IOC容器中-->
+    <bean id="userServiceAspect" class="edu.nf.ch14.aspect.UserServiceAspect"/>
+
+    <!-- 将切面应用到目标对象上并创建代理，可以使用Spring提供的ProxyFactoryBean,
+         这个FactoryBean的核心作用就是创建代理实例，并将其纳入IOC容器中-->
+    <bean id="userServiceProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
+        <!-- 需要注入一些相应的属性才能创建代理对象 -->
+
+        <!-- 目标对象所实现的接口。如果有接口，spring会自动使用JDK动态代理，
+             否则就使用cglib来创建代理对象-->
+        <!--<property name="proxyInterfaces" value="edu.nf.ch14.service.UserService"/>-->
+        <!--<property name="proxyInterfaces">
+            <list>
+                <value>edu.nf.ch14.service.UserService</value>
+            </list>
+        </property>-->
+
+        <!-- 指定目标对象，也就是被代理的实例, ref指定上面配置的目标对象的id -->
+        <property name="target" ref="stuService"/>
+
+        <!-- 配置切面，这样spring在调用目标对象方法时会织入相应的增强 -->
+        <property name="interceptorNames">
+            <list>
+                <!-- 引用上面装配的切面的id -->
+                <value>userServiceAspect</value>
+            </list>
+        </property>
+    </bean>
+</beans>
\ No newline at end of file
Index: spring-study.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- spring-study.iml	(date 1606697314000)
+++ spring-study.iml	(date 1606697314000)
@@ -0,0 +1,2 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4" />
\ No newline at end of file
Index: ch08/src/main/java/edu/nf/ch08/dao/UserDao.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch08/src/main/java/edu/nf/ch08/dao/UserDao.java	(date 1606876706000)
+++ ch08/src/main/java/edu/nf/ch08/dao/UserDao.java	(date 1606876706000)
@@ -0,0 +1,18 @@
+package edu.nf.ch08.dao;
+
+import edu.nf.ch08.entity.Users;
+
+import java.util.List;
+
+/**
+ * @author wangl
+ * @date 2020/12/2
+ */
+public interface UserDao {
+
+    /**
+     * 查询用户列表
+     * @return
+     */
+    List<Users> listUser();
+}
Index: ch08/src/main/java/edu/nf/ch08/util/MybatisUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch08/src/main/java/edu/nf/ch08/util/MybatisUtils.java	(date 1606877372000)
+++ ch08/src/main/java/edu/nf/ch08/util/MybatisUtils.java	(date 1606877372000)
@@ -0,0 +1,35 @@
+package edu.nf.ch08.util;
+
+import org.apache.ibatis.io.Resources;
+import org.apache.ibatis.session.SqlSession;
+import org.apache.ibatis.session.SqlSessionFactory;
+import org.apache.ibatis.session.SqlSessionFactoryBuilder;
+
+import java.io.IOException;
+import java.io.InputStream;
+
+/**
+ * @author wangl
+ * @date 2020/12/2
+ */
+public class MybatisUtils {
+
+    private static SqlSessionFactory sqlSessionFactory;
+
+    static {
+        try {
+            InputStream is = Resources.getResourceAsStream("mybatis.xml");
+            sqlSessionFactory = new SqlSessionFactoryBuilder().build(is);
+        } catch (IOException e) {
+            e.printStackTrace();
+        }
+    }
+
+    public static SqlSession getSqlSession(){
+        return sqlSessionFactory.openSession();
+    }
+
+    public static void main(String[] args) {
+        System.out.println(getSqlSession());
+    }
+}
Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- pom.xml	(date 1607482168000)
+++ pom.xml	(date 1607482168000)
@@ -0,0 +1,60 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <modelVersion>4.0.0</modelVersion>
+
+    <groupId>edu.nf</groupId>
+    <artifactId>spring-study</artifactId>
+    <version>1.0-SNAPSHOT</version>
+    <modules>
+        <module>ch01</module>
+        <module>ch02</module>
+        <module>ch03</module>
+        <module>ch04</module>
+        <module>ch05</module>
+        <module>ch06</module>
+        <module>ch07</module>
+        <module>ch08</module>
+        <module>ch09</module>
+        <module>aaa</module>
+        <module>ch10</module>
+        <module>ch11</module>
+        <module>ch12</module>
+        <module>ch13</module>
+        <module>ch14</module>
+        <module>ch15</module>
+        <module>ch16</module>
+        <module>ch17</module>
+        <module>ch18</module>
+        <module>ch19</module>
+        <module>ch20</module>
+        <module>ch21</module>
+    </modules>
+    <packaging>pom</packaging>
+
+    <properties>
+        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
+        <java.version>1.8</java.version>
+        <maven.compiler.source>1.8</maven.compiler.source>
+        <maven.compiler.target>1.8</maven.compiler.target>
+        <maven.compiler.compilerVersion>1.8</maven.compiler.compilerVersion>
+    </properties>
+
+    <dependencies>
+        <!-- spring依赖 -->
+        <dependency>
+            <groupId>org.springframework</groupId>
+            <artifactId>spring-context</artifactId>
+            <version>5.2.9.RELEASE</version>
+        </dependency>
+        <!-- junit单元测试 -->
+        <dependency>
+            <groupId>junit</groupId>
+            <artifactId>junit</artifactId>
+            <version>4.12</version>
+            <scope>test</scope>
+        </dependency>
+    </dependencies>
+
+</project>
\ No newline at end of file
Index: ch08/src/main/java/edu/nf/ch08/entity/Users.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch08/src/main/java/edu/nf/ch08/entity/Users.java	(date 1606876659000)
+++ ch08/src/main/java/edu/nf/ch08/entity/Users.java	(date 1606876659000)
@@ -0,0 +1,26 @@
+package edu.nf.ch08.entity;
+
+/**
+ * @author wangl
+ * @date 2020/12/2
+ */
+public class Users {
+    private Integer uid;
+    private String userName;
+
+    public Integer getUid() {
+        return uid;
+    }
+
+    public void setUid(Integer uid) {
+        this.uid = uid;
+    }
+
+    public String getUserName() {
+        return userName;
+    }
+
+    public void setUserName(String userName) {
+        this.userName = userName;
+    }
+}
Index: ch14/target/classes/applicationContext.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch14/target/classes/applicationContext.xml	(date 1607325026000)
+++ ch14/target/classes/applicationContext.xml	(date 1607325026000)
@@ -0,0 +1,38 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
+
+    <!-- 装配业务层对象 -->
+    <bean id="userService" class="edu.nf.ch14.service.impl.UserServiceImpl"/>
+    <bean id="stuService" class="edu.nf.ch14.service.StuService"/>
+
+    <!-- 装配切面，将切面纳入IOC容器中-->
+    <bean id="userServiceAspect" class="edu.nf.ch14.aspect.UserServiceAspect"/>
+
+    <!-- 将切面应用到目标对象上并创建代理，可以使用Spring提供的ProxyFactoryBean,
+         这个FactoryBean的核心作用就是创建代理实例，并将其纳入IOC容器中-->
+    <bean id="userServiceProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
+        <!-- 需要注入一些相应的属性才能创建代理对象 -->
+
+        <!-- 目标对象所实现的接口。如果有接口，spring会自动使用JDK动态代理，
+             否则就使用cglib来创建代理对象-->
+        <!--<property name="proxyInterfaces" value="edu.nf.ch14.service.UserService"/>-->
+        <!--<property name="proxyInterfaces">
+            <list>
+                <value>edu.nf.ch14.service.UserService</value>
+            </list>
+        </property>-->
+
+        <!-- 指定目标对象，也就是被代理的实例, ref指定上面配置的目标对象的id -->
+        <property name="target" ref="stuService"/>
+
+        <!-- 配置切面，这样spring在调用目标对象方法时会织入相应的增强 -->
+        <property name="interceptorNames">
+            <list>
+                <!-- 引用上面装配的切面的id -->
+                <value>userServiceAspect</value>
+            </list>
+        </property>
+    </bean>
+</beans>
\ No newline at end of file
Index: ch19/src/test/java/edu/nf/ch19/test/EventTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch19/src/test/java/edu/nf/ch19/test/EventTest.java	(date 1607478373000)
+++ ch19/src/test/java/edu/nf/ch19/test/EventTest.java	(date 1607478373000)
@@ -0,0 +1,33 @@
+package edu.nf.ch19.test;
+
+import edu.nf.ch19.demo1.MyEvent;
+import edu.nf.ch19.demo1.MySource;
+import edu.nf.ch19.demo2.DemoEvent;
+import org.junit.Test;
+import org.springframework.context.ApplicationContext;
+import org.springframework.context.annotation.AnnotationConfigApplicationContext;
+
+/**
+ * @author wangl
+ * @date 2020/12/9
+ */
+public class EventTest {
+
+    @Test
+    public void testEvent(){
+        ApplicationContext context = new AnnotationConfigApplicationContext("edu.nf.ch19.demo1");
+        //创建事件源
+        MySource source = new MySource("Hello spring");
+        //创建事件对象
+        MyEvent event = new MyEvent(source);
+        //向容器发布事件
+        context.publishEvent(event);
+    }
+
+    @Test
+    public void testEvent2(){
+        ApplicationContext context = new AnnotationConfigApplicationContext("edu.nf.ch19.demo2");
+        DemoEvent event = new DemoEvent("Hello spring");
+        context.publishEvent(event);
+    }
+}
Index: ch19/src/main/java/edu/nf/ch19/demo2/DemoEvent.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch19/src/main/java/edu/nf/ch19/demo2/DemoEvent.java	(date 1607478037000)
+++ ch19/src/main/java/edu/nf/ch19/demo2/DemoEvent.java	(date 1607478037000)
@@ -0,0 +1,26 @@
+package edu.nf.ch19.demo2;
+
+/**
+ * @author wangl
+ * @date 2020/12/9
+ * 自定义事件对象
+ */
+public class DemoEvent {
+
+    private String message;
+
+    public DemoEvent() {
+    }
+
+    public DemoEvent(String message) {
+        this.message = message;
+    }
+
+    public String getMessage() {
+        return message;
+    }
+
+    public void setMessage(String message) {
+        this.message = message;
+    }
+}
Index: ch08/src/main/java/edu/nf/ch08/service/UserService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch08/src/main/java/edu/nf/ch08/service/UserService.java	(date 1606893849000)
+++ ch08/src/main/java/edu/nf/ch08/service/UserService.java	(date 1606893849000)
@@ -0,0 +1,17 @@
+package edu.nf.ch08.service;
+
+import edu.nf.ch08.entity.Users;
+
+import java.util.List;
+
+/**
+ * @author wangl
+ * @date 2020/12/2
+ */
+public interface UserService {
+    /**
+     * 查询用户已列表
+     * @return
+     */
+    List<Users> listUser();
+}
Index: ch08/src/main/java/edu/nf/ch08/factorybean/MapperFactoryBean.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch08/src/main/java/edu/nf/ch08/factorybean/MapperFactoryBean.java	(date 1606878030000)
+++ ch08/src/main/java/edu/nf/ch08/factorybean/MapperFactoryBean.java	(date 1606878030000)
@@ -0,0 +1,52 @@
+package edu.nf.ch08.factorybean;
+
+import edu.nf.ch08.util.MybatisUtils;
+import org.apache.ibatis.session.SqlSession;
+import org.springframework.beans.factory.FactoryBean;
+
+/**
+ * @author wangl
+ * @date 2020/12/2
+ * 通过自定义FactoryBean来创建mybatis的mapper接口的代理对象
+ * 这里的T表示任意Dao接口的类型
+ */
+public class MapperFactoryBean<T> implements FactoryBean<T> {
+
+    /**
+     * JDK动态代理创建代理对象时需要传入一个接口，
+     * 而这个接口可以通过set方法注入进来
+     */
+    private Class<T> daoInterface;
+
+    /**
+     * 提供方一个set方法注入一个Dao的接口的Class对象
+     * @param daoInterface
+     */
+    public void setDaoInterface(Class<T> daoInterface) {
+        this.daoInterface = daoInterface;
+    }
+
+    /**
+     * 当IOC容器调用getObject方法时，返回的是sqlSession的getMapper
+     * 的代理对象，这个代理对象就可以纳入容器中管理
+     * @return
+     * @throws Exception
+     */
+    @Override
+    public T getObject() throws Exception {
+        SqlSession sqlSession = MybatisUtils.getSqlSession();
+        //daoInterface就是某个Dao接口的Class对象
+        T mapperProxy = sqlSession.getMapper(daoInterface);
+        return mapperProxy;
+    }
+
+    @Override
+    public Class<?> getObjectType() {
+        return daoInterface;
+    }
+
+    @Override
+    public boolean isSingleton() {
+        return true;
+    }
+}
Index: ch17/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch17/README.md	(date 1607409872000)
+++ ch17/README.md	(date 1607409872000)
@@ -0,0 +1,1 @@
+# 使用AspectJ注解，在xml中启用AspectJ注解处理器
\ No newline at end of file
Index: ch08/src/main/java/edu/nf/ch08/service/impl/UserServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch08/src/main/java/edu/nf/ch08/service/impl/UserServiceImpl.java	(date 1606893969000)
+++ ch08/src/main/java/edu/nf/ch08/service/impl/UserServiceImpl.java	(date 1606893969000)
@@ -0,0 +1,27 @@
+package edu.nf.ch08.service.impl;
+
+import edu.nf.ch08.dao.UserDao;
+import edu.nf.ch08.entity.Users;
+import edu.nf.ch08.service.UserService;
+
+import java.util.List;
+
+/**
+ * @author wangl
+ * @date 2020/12/2
+ */
+public class UserServiceImpl implements UserService {
+
+    private UserDao userDao;
+
+    //通过set方法注入UserDao的实现类
+    //注意：此时注入的就是mapperProxy代理对象
+    public void setUserDao(UserDao userDao) {
+        this.userDao = userDao;
+    }
+
+    @Override
+    public List<Users> listUser() {
+        return userDao.listUser();
+    }
+}
Index: ch08/src/main/resources/beans.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch08/src/main/resources/beans.xml	(date 1606894073000)
+++ ch08/src/main/resources/beans.xml	(date 1606894073000)
@@ -0,0 +1,17 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
+    <!-- 装配UserDao -->
+    <bean id="userDao" class="edu.nf.ch08.factorybean.MapperFactoryBean">
+        <!-- MapperFactoryBean需要注入一个Dao接口的Class对象,
+         注入的时候只需要给Dao接口的完整类名即可，Spring会将其加载并创建Class-->
+        <property name="daoInterface" value="edu.nf.ch08.dao.UserDao"/>
+    </bean>
+
+    <!-- 装配UserService -->
+    <bean id="userService" class="edu.nf.ch08.service.impl.UserServiceImpl">
+        <!-- 注入UserDao -->
+        <property name="userDao" ref="userDao"/>
+    </bean>
+</beans>
\ No newline at end of file
Index: ch17/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch17/pom.xml	(date 1607409898000)
+++ ch17/pom.xml	(date 1607409898000)
@@ -0,0 +1,31 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <artifactId>spring-study</artifactId>
+        <groupId>edu.nf</groupId>
+        <version>1.0-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+
+    <artifactId>ch17</artifactId>
+
+    <properties>
+        <maven.compiler.source>8</maven.compiler.source>
+        <maven.compiler.target>8</maven.compiler.target>
+    </properties>
+
+    <dependencies>
+        <dependency>
+            <groupId>org.aspectj</groupId>
+            <artifactId>aspectjweaver</artifactId>
+            <version>1.9.5</version>
+        </dependency>
+        <dependency>
+            <groupId>cglib</groupId>
+            <artifactId>cglib-nodep</artifactId>
+            <version>3.3.0</version>
+        </dependency>
+    </dependencies>
+</project>
\ No newline at end of file
Index: .idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/.gitignore	(date 1606697277000)
+++ .idea/.gitignore	(date 1606697277000)
@@ -0,0 +1,8 @@
+# Default ignored files
+/shelf/
+/workspace.xml
+# Datasource local storage ignored files
+/dataSources/
+/dataSources.local.xml
+# Editor-based HTTP Client requests
+/httpRequests/
Index: ch08/src/main/resources/mybatis.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch08/src/main/resources/mybatis.xml	(date 1606877348000)
+++ ch08/src/main/resources/mybatis.xml	(date 1606877348000)
@@ -0,0 +1,25 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
+        "http://mybatis.org/dtd/mybatis-3-config.dtd">
+
+<configuration>
+    <typeAliases>
+        <package name="edu.nf.ch08.entity"/>
+    </typeAliases>
+
+    <environments default="mysql">
+        <environment id="mysql">
+            <transactionManager type="JDBC"/>
+            <dataSource type="POOLED">
+                <property name="driver" value="com.mysql.jdbc.Driver"/>
+                <property name="url" value="jdbc:mysql://localhost:3306/demo?useSSL=false&amp;useUnicode=true&amp;characterEncoding=utf-8"/>
+                <property name="username" value="root"/>
+                <property name="password" value="root"/>
+            </dataSource>
+        </environment>
+    </environments>
+
+    <mappers>
+        <mapper resource="mapper/UserMapper.xml"/>
+    </mappers>
+</configuration>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(date 1607483725467)
+++ .idea/misc.xml	(date 1607483725467)
@@ -0,0 +1,22 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ExternalStorageConfigurationManager" enabled="true" />
+  <component name="JavaScriptSettings">
+    <option name="languageLevel" value="ES6" />
+  </component>
+  <component name="MavenProjectsManager">
+    <option name="originalFiles">
+      <list>
+        <option value="$PROJECT_DIR$/pom.xml" />
+      </list>
+    </option>
+    <option name="ignoredFiles">
+      <set>
+        <option value="$PROJECT_DIR$/aaa/pom.xml" />
+      </set>
+    </option>
+  </component>
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" project-jdk-name="1.8" project-jdk-type="JavaSDK">
+    <output url="file://$PROJECT_DIR$/out" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/uiDesigner.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/uiDesigner.xml	(date 1606958939000)
+++ .idea/uiDesigner.xml	(date 1606958939000)
@@ -0,0 +1,124 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Palette2">
+    <group name="Swing">
+      <item class="com.intellij.uiDesigner.HSpacer" tooltip-text="Horizontal Spacer" icon="/com/intellij/uiDesigner/icons/hspacer.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="1" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="com.intellij.uiDesigner.VSpacer" tooltip-text="Vertical Spacer" icon="/com/intellij/uiDesigner/icons/vspacer.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="1" anchor="0" fill="2" />
+      </item>
+      <item class="javax.swing.JPanel" icon="/com/intellij/uiDesigner/icons/panel.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JScrollPane" icon="/com/intellij/uiDesigner/icons/scrollPane.png" removable="false" auto-create-binding="false" can-attach-label="true">
+        <default-constraints vsize-policy="7" hsize-policy="7" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JButton" icon="/com/intellij/uiDesigner/icons/button.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="0" fill="1" />
+        <initial-values>
+          <property name="text" value="Button" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JRadioButton" icon="/com/intellij/uiDesigner/icons/radioButton.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="RadioButton" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JCheckBox" icon="/com/intellij/uiDesigner/icons/checkBox.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="CheckBox" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JLabel" icon="/com/intellij/uiDesigner/icons/label.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="Label" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JTextField" icon="/com/intellij/uiDesigner/icons/textField.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JPasswordField" icon="/com/intellij/uiDesigner/icons/passwordField.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JFormattedTextField" icon="/com/intellij/uiDesigner/icons/formattedTextField.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextArea" icon="/com/intellij/uiDesigner/icons/textArea.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextPane" icon="/com/intellij/uiDesigner/icons/textPane.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JEditorPane" icon="/com/intellij/uiDesigner/icons/editorPane.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JComboBox" icon="/com/intellij/uiDesigner/icons/comboBox.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="2" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JTable" icon="/com/intellij/uiDesigner/icons/table.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JList" icon="/com/intellij/uiDesigner/icons/list.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="2" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTree" icon="/com/intellij/uiDesigner/icons/tree.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTabbedPane" icon="/com/intellij/uiDesigner/icons/tabbedPane.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSplitPane" icon="/com/intellij/uiDesigner/icons/splitPane.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSpinner" icon="/com/intellij/uiDesigner/icons/spinner.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSlider" icon="/com/intellij/uiDesigner/icons/slider.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSeparator" icon="/com/intellij/uiDesigner/icons/separator.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JProgressBar" icon="/com/intellij/uiDesigner/icons/progressbar.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JToolBar" icon="/com/intellij/uiDesigner/icons/toolbar.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1">
+          <preferred-size width="-1" height="20" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JToolBar$Separator" icon="/com/intellij/uiDesigner/icons/toolbarSeparator.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JScrollBar" icon="/com/intellij/uiDesigner/icons/scrollbar.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="0" anchor="0" fill="2" />
+      </item>
+    </group>
+  </component>
+</project>
\ No newline at end of file
Index: ch08/src/main/resources/mapper/UserMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch08/src/main/resources/mapper/UserMapper.xml	(date 1606877276000)
+++ ch08/src/main/resources/mapper/UserMapper.xml	(date 1606877276000)
@@ -0,0 +1,15 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
+        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="edu.nf.ch08.dao.UserDao">
+
+    <resultMap id="userMap" type="edu.nf.ch08.entity.Users">
+        <id property="uid" column="u_id"/>
+        <result property="userName" column="u_name"/>
+    </resultMap>
+
+    <select id="listUser" resultMap="userMap">
+        select u_id, u_name from user_info
+    </select>
+
+</mapper>
\ No newline at end of file
Index: ch20/src/main/java/edu/nf/ch20/job/DemoTask.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch20/src/main/java/edu/nf/ch20/job/DemoTask.java	(date 1607479860000)
+++ ch20/src/main/java/edu/nf/ch20/job/DemoTask.java	(date 1607479860000)
@@ -0,0 +1,36 @@
+package edu.nf.ch20.job;
+
+import edu.nf.ch20.service.TaskService;
+
+/**
+ * @author wangl
+ * @date 2020/12/9
+ * 定时任务处理类
+ */
+public class DemoTask {
+
+    private TaskService taskService;
+
+    /**
+     * 定时任务需要反复执行TaskService中的业务逻辑，
+     * 因此将它注入进来
+     * @param taskService
+     */
+    public void setTaskService(TaskService taskService) {
+        this.taskService = taskService;
+    }
+
+    /**
+     * 定时备份
+     */
+    public void executeBackup(){
+        taskService.backup();
+    }
+
+    /**
+     * 定时清理
+     */
+    public void executeClean(){
+        taskService.clean();
+    }
+}
Index: .idea/jarRepositories.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/jarRepositories.xml	(date 1607483725525)
+++ .idea/jarRepositories.xml	(date 1607483725525)
@@ -0,0 +1,25 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="RemoteRepositoriesConfiguration">
+    <remote-repository>
+      <option name="id" value="central" />
+      <option name="name" value="Central Repository" />
+      <option name="url" value="https://repo.maven.apache.org/maven2" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="central" />
+      <option name="name" value="Maven Central repository" />
+      <option name="url" value="https://repo1.maven.org/maven2" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="jboss.community" />
+      <option name="name" value="JBoss Community repository" />
+      <option name="url" value="https://repository.jboss.org/nexus/content/repositories/public/" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="central" />
+      <option name="name" value="Central Repository" />
+      <option name="url" value="https://maven.aliyun.com/repository/public" />
+    </remote-repository>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/compiler.xml	(date 1609154429181)
+++ .idea/compiler.xml	(date 1609154429181)
@@ -0,0 +1,36 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="CompilerConfiguration">
+    <annotationProcessing>
+      <profile name="Maven default annotation processors profile" enabled="true">
+        <sourceOutputDir name="target/generated-sources/annotations" />
+        <sourceTestOutputDir name="target/generated-test-sources/test-annotations" />
+        <outputRelativeToContentRoot value="true" />
+        <module name="ch08" />
+        <module name="ch07" />
+        <module name="ch06" />
+        <module name="ch05" />
+        <module name="ch04" />
+        <module name="ch19" />
+        <module name="ch18" />
+        <module name="ch17" />
+        <module name="ch16" />
+        <module name="ch15" />
+        <module name="ch14" />
+        <module name="ch13" />
+        <module name="ch12" />
+        <module name="ch11" />
+        <module name="ch10" />
+        <module name="ch02" />
+        <module name="ch21" />
+        <module name="ch20" />
+        <module name="ch03" />
+        <module name="ch01" />
+        <module name="ch09" />
+      </profile>
+    </annotationProcessing>
+    <bytecodeTargetLevel>
+      <module name="aaa" target="8" />
+    </bytecodeTargetLevel>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/encodings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/encodings.xml	(date 1607482205000)
+++ .idea/encodings.xml	(date 1607482205000)
@@ -0,0 +1,47 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Encoding">
+    <file url="file://$PROJECT_DIR$/ch01/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/ch01/src/main/resources" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/ch02/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/ch02/src/main/resources" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/ch03/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/ch03/src/main/resources" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/ch04/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/ch04/src/main/resources" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/ch05/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/ch05/src/main/resources" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/ch06/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/ch06/src/main/resources" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/ch07/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/ch07/src/main/resources" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/ch08/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/ch08/src/main/resources" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/ch09/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/ch09/src/main/resources" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/ch10/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/ch10/src/main/resources" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/ch11/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/ch11/src/main/resources" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/ch12/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/ch12/src/main/resources" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/ch13/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/ch13/src/main/resources" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/ch14/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/ch14/src/main/resources" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/ch15/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/ch15/src/main/resources" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/ch16/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/ch16/src/main/resources" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/ch17/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/ch17/src/main/resources" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/ch18/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/ch18/src/main/resources" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/ch19/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/ch19/src/main/resources" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/ch20/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/ch20/src/main/resources" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/ch21/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/ch21/src/main/resources" charset="UTF-8" />
+  </component>
+</project>
\ No newline at end of file
Index: ch11/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch11/README.md	(date 1607046181000)
+++ ch11/README.md	(date 1607046181000)
@@ -0,0 +1,1 @@
+# 使用Java配置类以及AnnotationConfigApplicationContext
\ No newline at end of file
Index: ch20/src/main/java/edu/nf/ch20/service/impl/TaskServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch20/src/main/java/edu/nf/ch20/service/impl/TaskServiceImpl.java	(date 1607479419000)
+++ ch20/src/main/java/edu/nf/ch20/service/impl/TaskServiceImpl.java	(date 1607479419000)
@@ -0,0 +1,20 @@
+package edu.nf.ch20.service.impl;
+
+import edu.nf.ch20.service.TaskService;
+
+/**
+ * @author wangl
+ * @date 2020/12/9
+ */
+public class TaskServiceImpl implements TaskService {
+
+    @Override
+    public void backup() {
+        System.out.println(Thread.currentThread().getName() + "执行备份...");
+    }
+
+    @Override
+    public void clean() {
+        System.out.println(Thread.currentThread().getName() + "执行清理...");
+    }
+}
Index: ch11/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch11/pom.xml	(date 1607043768000)
+++ ch11/pom.xml	(date 1607043768000)
@@ -0,0 +1,19 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <artifactId>spring-study</artifactId>
+        <groupId>edu.nf</groupId>
+        <version>1.0-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+
+    <artifactId>ch11</artifactId>
+
+    <properties>
+        <maven.compiler.source>8</maven.compiler.source>
+        <maven.compiler.target>8</maven.compiler.target>
+    </properties>
+
+</project>
\ No newline at end of file
Index: ch18/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch18/README.md	(date 1607475980000)
+++ ch18/README.md	(date 1607475980000)
@@ -0,0 +1,1 @@
+# 使用AspectJ注解与Java配置类
\ No newline at end of file
Index: ch04/src/main/java/edu/nf/ch04/Users.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch04/src/main/java/edu/nf/ch04/Users.java	(date 1606786163000)
+++ ch04/src/main/java/edu/nf/ch04/Users.java	(date 1606786163000)
@@ -0,0 +1,33 @@
+package edu.nf.ch04;
+
+import org.springframework.beans.factory.DisposableBean;
+import org.springframework.beans.factory.InitializingBean;
+
+/**
+ * @author wangl
+ * @date 2020/12/1
+ */
+public class Users implements InitializingBean, DisposableBean {
+
+    public Users() {
+        System.out.println("执行构造方法");
+    }
+
+    public void init(){
+        System.out.println("执行init方法");
+    }
+
+    public void myDestroy(){
+        System.out.println("执行myDestroy方法");
+    }
+
+    @Override
+    public void afterPropertiesSet() throws Exception {
+        System.out.println("执行afterPropertiesSet方法");
+    }
+
+    @Override
+    public void destroy() throws Exception {
+        System.out.println("执行destroy方法");
+    }
+}
Index: ch08/src/test/java/edu/nf/ch08/test/SpringTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch08/src/test/java/edu/nf/ch08/test/SpringTest.java	(date 1606894121000)
+++ ch08/src/test/java/edu/nf/ch08/test/SpringTest.java	(date 1606894121000)
@@ -0,0 +1,27 @@
+package edu.nf.ch08.test;
+
+import edu.nf.ch08.dao.UserDao;
+import edu.nf.ch08.entity.Users;
+import edu.nf.ch08.service.UserService;
+import org.junit.Test;
+import org.springframework.context.ApplicationContext;
+import org.springframework.context.support.ClassPathXmlApplicationContext;
+
+import java.util.List;
+
+/**
+ * @author wangl
+ * @date 2020/12/2
+ */
+public class SpringTest {
+
+    @Test
+    public void testFactoryBean(){
+        ApplicationContext context = new ClassPathXmlApplicationContext("beans.xml");
+        //此时从容器获取的Bean就是一个mapperProxy代理对象，它已经实现了
+        //UserDao的接口
+        UserService service = context.getBean("userService", UserService.class);
+        List<Users> list = service.listUser();
+        list.forEach(user -> System.out.println(user.getUserName()));
+    }
+}
Index: ch18/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch18/pom.xml	(date 1607475082000)
+++ ch18/pom.xml	(date 1607475082000)
@@ -0,0 +1,32 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <artifactId>spring-study</artifactId>
+        <groupId>edu.nf</groupId>
+        <version>1.0-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+
+    <artifactId>ch18</artifactId>
+
+    <properties>
+        <maven.compiler.source>8</maven.compiler.source>
+        <maven.compiler.target>8</maven.compiler.target>
+    </properties>
+
+    <dependencies>
+        <dependency>
+            <groupId>org.aspectj</groupId>
+            <artifactId>aspectjweaver</artifactId>
+            <version>1.9.5</version>
+        </dependency>
+        <dependency>
+            <groupId>cglib</groupId>
+            <artifactId>cglib-nodep</artifactId>
+            <version>3.3.0</version>
+        </dependency>
+    </dependencies>
+
+</project>
\ No newline at end of file
Index: ch15/target/classes/applicationContext.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch15/target/classes/applicationContext.xml	(date 1607392303000)
+++ ch15/target/classes/applicationContext.xml	(date 1607392303000)
@@ -0,0 +1,25 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">
+
+    <!-- 装配业务层对象 -->
+    <bean id="userService" class="edu.nf.ch15.service.impl.UserServiceImpl"/>
+    <!-- 配置切面-->
+    <bean id="userServiceAspect" class="edu.nf.ch15.aspect.UserServiceAspect"/>
+    <!-- aop配置, proxy-target-class设置为true表示强制使用cglib生成代理-->
+    <aop:config proxy-target-class="true">
+        <!-- 配置切入点，spring使用了AspectJ的切入点表达式来配置切入点。
+        通过切入点表达式可以定位到需要增强的目标方法，这些目标方称之为连接点-->
+        <!-- 表达式语法：execution(访问修饰符 包名.类名.方法名(参数类型))。
+             方法参数可以指定参数类型，也可以使用".."来表示任意类型和个数的参数。
+             注意：execution表达式是切入到方法级别-->
+        <aop:pointcut id="myPointcut" expression="execution(* edu.nf.ch15.service.impl.*.*(..))"/>
+        <!-- 也可以使用within表达式，它是其融入到类级别-->
+        <aop:pointcut id="myPointcut2" expression="within(edu.nf.ch15.service.impl.*)"/>
+        <!-- 配置Advisor（通知器，也就是切面
+             advice-ref指定上面切面的id
+             pointcut-ref指定切入点的id-->
+        <aop:advisor advice-ref="userServiceAspect" pointcut-ref="myPointcut2"/>
+    </aop:config>
+</beans>
\ No newline at end of file
Index: ch04/src/main/java/edu/nf/ch04/People.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch04/src/main/java/edu/nf/ch04/People.java	(date 1606783842000)
+++ ch04/src/main/java/edu/nf/ch04/People.java	(date 1606783842000)
@@ -0,0 +1,32 @@
+package edu.nf.ch04;
+
+/**
+ * @author wangl
+ * @date 2020/12/1
+ */
+public class People {
+
+    public People(){
+        System.out.println("执行了构造方法");
+    }
+
+    /**
+     * Spring调用
+     * bean的初始化方法，注意：是在对象创建之后执行
+     */
+    public void init(){
+        System.out.println("执行Bean的init方法");
+    }
+
+    /**
+     * Spring调用
+     * bean的销毁方法，注意：是在销毁bean之前执行
+     */
+    public void destroy(){
+        System.out.println("执行Bean的destroy方法");
+    }
+
+    public void say(){
+        System.out.println("Hello world");
+    }
+}
Index: ch04/src/main/java/edu/nf/ch04/processor/MyPostProcessor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch04/src/main/java/edu/nf/ch04/processor/MyPostProcessor.java	(date 1606787522000)
+++ ch04/src/main/java/edu/nf/ch04/processor/MyPostProcessor.java	(date 1606787522000)
@@ -0,0 +1,41 @@
+package edu.nf.ch04.processor;
+
+import org.springframework.beans.BeansException;
+import org.springframework.beans.factory.config.BeanPostProcessor;
+
+/**
+ * @author wangl
+ * @date 2020/12/1
+ * BeanPostProcessor这个接口称之为Bean的后处理器，它可以在Spring容器实例化
+ * bean对象并完成依赖注入，在执行bean的初始化方法（如：InitializingBean接口、
+ * 自定义的init-method）前后执行，用于添加一些其他的处理逻辑。（注意：这个接口
+ * 是针对所有的Bean）
+ */
+public class MyPostProcessor implements BeanPostProcessor {
+
+    /**
+     * 在执行初始化方法前执行
+     * @param bean
+     * @param beanName
+     * @return
+     * @throws BeansException
+     */
+    @Override
+    public Object postProcessBeforeInitialization(Object bean, String beanName) throws BeansException {
+        System.out.println("执行postProcessBeforeInitialization");
+        return bean;
+    }
+
+    /**
+     * 执行初始化方法后执行
+     * @param bean
+     * @param beanName
+     * @return
+     * @throws BeansException
+     */
+    @Override
+    public Object postProcessAfterInitialization(Object bean, String beanName) throws BeansException {
+        System.out.println("执行postProcessAfterInitialization");
+        return bean;
+    }
+}
Index: ch08/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch08/README.md	(date 1606877211000)
+++ ch08/README.md	(date 1606877211000)
@@ -0,0 +1,1 @@
+# FactoryBean使用2
\ No newline at end of file
Index: ch08/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch08/pom.xml	(date 1606876516000)
+++ ch08/pom.xml	(date 1606876516000)
@@ -0,0 +1,27 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <artifactId>spring-study</artifactId>
+        <groupId>edu.nf</groupId>
+        <version>1.0-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+
+    <artifactId>ch08</artifactId>
+
+    <dependencies>
+        <dependency>
+            <groupId>org.mybatis</groupId>
+            <artifactId>mybatis</artifactId>
+            <version>3.5.6</version>
+        </dependency>
+        <dependency>
+            <groupId>mysql</groupId>
+            <artifactId>mysql-connector-java</artifactId>
+            <version>5.1.47</version>
+        </dependency>
+    </dependencies>
+
+</project>
\ No newline at end of file
Index: ch04/src/main/resources/beans.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch04/src/main/resources/beans.xml	(date 1606787947000)
+++ ch04/src/main/resources/beans.xml	(date 1606787947000)
@@ -0,0 +1,43 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
+    <!-- init-method指定bean的初始化方法，destroy-method指定bean的销毁方法 -->
+    <!--<bean id="people" class="edu.nf.ch04.People" init-method="init" destroy-method="destroy"/>-->
+
+    <!--
+      bean的初始化方法
+      两种方式：
+      1. 实现InitializingBean接口，接口中包含一个afterPropertiesSet方法
+      2. 在Bean中自定义初始化方法，并在配置文件中通过init-method属性来指定
+      注意：如果InitializingBean接口和init-method一起使用，
+      那么先执行InitializingBean接口的方法，再执行自定义的init方法
+
+      bean的销毁方法
+      两种方式：
+      1. 实现DisposableBean接口，此接口包含一个destroy方法
+      2. 在Bean中自定义销毁方法，并在配置文件中通过destroy-method指定
+      注意：如果两者同时使用，DisposableBean接口先执行，再执行自定义的销毁方法
+
+      生命周期方法执行顺序：
+      1. 构造方法
+      2. InitializingBean的afterPropertiesSet
+      3. init-method
+      4. DisposableBean的destroy方法
+      5. destroy-method
+     -->
+    <bean id="user" class="edu.nf.ch04.Users" init-method="init" destroy-method="myDestroy"/>
+
+    <!-- 配置BeanPostProcessor（BPP） -->
+    <bean class="edu.nf.ch04.processor.MyPostProcessor"/>
+    <!-- 当配置了Bean的后处理器，生命周期方法如下：
+         1. 构造方法
+         2. 后处理器的postProcessBeforeInitialization
+         3. InitializingBean的afterPropertiesSet
+         4. 自定义init-method
+         5. 后处理器的postProcessAfterInitialization
+         6. DisposableBean的destroy
+         7. 自定义destroy-method
+    -->
+
+</beans>
\ No newline at end of file
Index: ch08/target/classes/mybatis.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch08/target/classes/mybatis.xml	(date 1606894127000)
+++ ch08/target/classes/mybatis.xml	(date 1606894127000)
@@ -0,0 +1,25 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
+        "http://mybatis.org/dtd/mybatis-3-config.dtd">
+
+<configuration>
+    <typeAliases>
+        <package name="edu.nf.ch08.entity"/>
+    </typeAliases>
+
+    <environments default="mysql">
+        <environment id="mysql">
+            <transactionManager type="JDBC"/>
+            <dataSource type="POOLED">
+                <property name="driver" value="com.mysql.jdbc.Driver"/>
+                <property name="url" value="jdbc:mysql://localhost:3306/demo?useSSL=false&amp;useUnicode=true&amp;characterEncoding=utf-8"/>
+                <property name="username" value="root"/>
+                <property name="password" value="root"/>
+            </dataSource>
+        </environment>
+    </environments>
+
+    <mappers>
+        <mapper resource="mapper/UserMapper.xml"/>
+    </mappers>
+</configuration>
\ No newline at end of file
Index: ch08/target/classes/beans.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch08/target/classes/beans.xml	(date 1606894127000)
+++ ch08/target/classes/beans.xml	(date 1606894127000)
@@ -0,0 +1,17 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
+    <!-- 装配UserDao -->
+    <bean id="userDao" class="edu.nf.ch08.factorybean.MapperFactoryBean">
+        <!-- MapperFactoryBean需要注入一个Dao接口的Class对象,
+         注入的时候只需要给Dao接口的完整类名即可，Spring会将其加载并创建Class-->
+        <property name="daoInterface" value="edu.nf.ch08.dao.UserDao"/>
+    </bean>
+
+    <!-- 装配UserService -->
+    <bean id="userService" class="edu.nf.ch08.service.impl.UserServiceImpl">
+        <!-- 注入UserDao -->
+        <property name="userDao" ref="userDao"/>
+    </bean>
+</beans>
\ No newline at end of file
Index: ch09/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch09/README.md	(date 1606958187000)
+++ ch09/README.md	(date 1606958187000)
@@ -0,0 +1,1 @@
+# xml与注解混合配置
\ No newline at end of file
Index: ch09/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch09/pom.xml	(date 1606958140000)
+++ ch09/pom.xml	(date 1606958140000)
@@ -0,0 +1,19 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <artifactId>spring-study</artifactId>
+        <groupId>edu.nf</groupId>
+        <version>1.0-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+
+    <artifactId>ch09</artifactId>
+
+    <properties>
+        <maven.compiler.source>8</maven.compiler.source>
+        <maven.compiler.target>8</maven.compiler.target>
+    </properties>
+
+</project>
\ No newline at end of file
Index: ch06/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch06/README.md	(date 1606870722000)
+++ ch06/README.md	(date 1606870722000)
@@ -0,0 +1,1 @@
+# 依赖注入2
\ No newline at end of file
Index: ch17/src/main/java/edu/nf/ch17/service/impl/StuServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch17/src/main/java/edu/nf/ch17/service/impl/StuServiceImpl.java	(date 1607410591000)
+++ ch17/src/main/java/edu/nf/ch17/service/impl/StuServiceImpl.java	(date 1607410591000)
@@ -0,0 +1,18 @@
+package edu.nf.ch17.service.impl;
+
+import edu.nf.ch17.service.StuService;
+import org.springframework.stereotype.Service;
+
+/**
+ * @author wangl
+ * @date 2020/12/8
+ */
+@Service("stuService")
+public class StuServiceImpl implements StuService {
+
+    @Override
+    public String save(String name) {
+        System.out.println("insert into stu_info values("+name+")");
+        return "success";
+    }
+}
Index: ch06/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch06/pom.xml	(date 1606870658000)
+++ ch06/pom.xml	(date 1606870658000)
@@ -0,0 +1,15 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <artifactId>spring-study</artifactId>
+        <groupId>edu.nf</groupId>
+        <version>1.0-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+
+    <artifactId>ch06</artifactId>
+
+
+</project>
\ No newline at end of file
Index: ch07/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch07/README.md	(date 1606875260000)
+++ ch07/README.md	(date 1606875260000)
@@ -0,0 +1,1 @@
+# FactoryBean接口的使用1
\ No newline at end of file
Index: ch04/src/test/java/edu/nf/ch04/test/SpringTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch04/src/test/java/edu/nf/ch04/test/SpringTest.java	(date 1606786042000)
+++ ch04/src/test/java/edu/nf/ch04/test/SpringTest.java	(date 1606786042000)
@@ -0,0 +1,20 @@
+package edu.nf.ch04.test;
+
+import org.junit.Test;
+import org.springframework.context.ApplicationContext;
+import org.springframework.context.support.ClassPathXmlApplicationContext;
+
+/**
+ * @author wangl
+ * @date 2020/12/1
+ */
+public class SpringTest {
+
+    @Test
+    public void testLife(){
+        ApplicationContext context = new ClassPathXmlApplicationContext("beans.xml");
+        //在实现类中会提供一个close方法用于关闭容器，因此当关闭容器前
+        //都会执行所有Bean的destroy方法
+        ((ClassPathXmlApplicationContext)context).close();
+    }
+}
Index: ch07/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch07/pom.xml	(date 1606876483000)
+++ ch07/pom.xml	(date 1606876483000)
@@ -0,0 +1,15 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <artifactId>spring-study</artifactId>
+        <groupId>edu.nf</groupId>
+        <version>1.0-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+
+    <artifactId>ch07</artifactId>
+
+
+</project>
\ No newline at end of file
Index: ch04/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch04/README.md	(date 1606783294000)
+++ ch04/README.md	(date 1606783294000)
@@ -0,0 +1,1 @@
+# Bean的生命周期
\ No newline at end of file
Index: ch16/target/classes/applicationContext.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch16/target/classes/applicationContext.xml	(date 1607397028000)
+++ ch16/target/classes/applicationContext.xml	(date 1607397028000)
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">
+
+    <!-- 装配业务层对象 -->
+    <bean id="userService" class="edu.nf.ch16.service.impl.UserServiceImpl"/>
+    <!-- 装配切面类-->
+    <bean id="userServiceAspect" class="edu.nf.ch16.aspect.UserServiceAspect"/>
+    <!-- 配置aop-->
+    <aop:config>
+        <!-- 定义切入点 -->
+        <aop:pointcut id="myPointcut" expression="execution(* edu.nf.ch16.service.impl.*.*(..))"/>
+        <!-- 配置切面, ref引用上面切面的id-->
+        <aop:aspect ref="userServiceAspect">
+            <!-- 配置各种通知, method指定切面类中对应的方法名，
+                 pointcut-ref引用切入点的id
+                 通常pointcut-ref引用的都是同一个切入点表达式，
+                 当某个通知想要自定义切点表达式的时候，
+                 可以通过pointcut属性重新自定义， 例如：pointcut="execution(...)"-->
+            <aop:before method="before" pointcut-ref="myPointcut"/>
+            <aop:around method="around" pointcut-ref="myPointcut"/>
+            <!-- 后置通知中的returning对应的是afterReturning方法的返回值参数名（名称要一致） -->
+            <aop:after-returning method="afterReturning" pointcut-ref="myPointcut" returning="returnVal"/>
+            <!-- 异常通知中的throwing对应afterThrowing方法的异常参数名（名称要一致）-->
+            <aop:after-throwing method="afterThrowing" pointcut-ref="myPointcut" throwing="e"/>
+            <aop:after method="after" pointcut-ref="myPointcut"/>
+        </aop:aspect>
+    </aop:config>
+</beans>
\ No newline at end of file
Index: ch04/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch04/pom.xml	(date 1606783252000)
+++ ch04/pom.xml	(date 1606783252000)
@@ -0,0 +1,15 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <artifactId>spring-study</artifactId>
+        <groupId>edu.nf</groupId>
+        <version>1.0-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+
+    <artifactId>ch04</artifactId>
+
+
+</project>
\ No newline at end of file
Index: ch04/target/classes/beans.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch04/target/classes/beans.xml	(date 1607308687000)
+++ ch04/target/classes/beans.xml	(date 1607308687000)
@@ -0,0 +1,43 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
+    <!-- init-method指定bean的初始化方法，destroy-method指定bean的销毁方法 -->
+    <!--<bean id="people" class="edu.nf.ch04.People" init-method="init" destroy-method="destroy"/>-->
+
+    <!--
+      bean的初始化方法
+      两种方式：
+      1. 实现InitializingBean接口，接口中包含一个afterPropertiesSet方法
+      2. 在Bean中自定义初始化方法，并在配置文件中通过init-method属性来指定
+      注意：如果InitializingBean接口和init-method一起使用，
+      那么先执行InitializingBean接口的方法，再执行自定义的init方法
+
+      bean的销毁方法
+      两种方式：
+      1. 实现DisposableBean接口，此接口包含一个destroy方法
+      2. 在Bean中自定义销毁方法，并在配置文件中通过destroy-method指定
+      注意：如果两者同时使用，DisposableBean接口先执行，再执行自定义的销毁方法
+
+      生命周期方法执行顺序：
+      1. 构造方法
+      2. InitializingBean的afterPropertiesSet
+      3. init-method
+      4. DisposableBean的destroy方法
+      5. destroy-method
+     -->
+    <bean id="user" class="edu.nf.ch04.Users" init-method="init" destroy-method="myDestroy"/>
+
+    <!-- 配置BeanPostProcessor（BPP） -->
+    <bean class="edu.nf.ch04.processor.MyPostProcessor"/>
+    <!-- 当配置了Bean的后处理器，生命周期方法如下：
+         1. 构造方法
+         2. 后处理器的postProcessBeforeInitialization
+         3. InitializingBean的afterPropertiesSet
+         4. 自定义init-method
+         5. 后处理器的postProcessAfterInitialization
+         6. DisposableBean的destroy
+         7. 自定义destroy-method
+    -->
+
+</beans>
\ No newline at end of file
Index: ch05/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch05/README.md	(date 1606790101000)
+++ ch05/README.md	(date 1606790101000)
@@ -0,0 +1,1 @@
+# 依赖注入1
\ No newline at end of file
Index: ch05/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch05/pom.xml	(date 1606789977000)
+++ ch05/pom.xml	(date 1606789977000)
@@ -0,0 +1,15 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <artifactId>spring-study</artifactId>
+        <groupId>edu.nf</groupId>
+        <version>1.0-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+
+    <artifactId>ch05</artifactId>
+
+
+</project>
\ No newline at end of file
Index: ch08/target/classes/mapper/UserMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch08/target/classes/mapper/UserMapper.xml	(date 1606894127000)
+++ ch08/target/classes/mapper/UserMapper.xml	(date 1606894127000)
@@ -0,0 +1,15 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
+        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="edu.nf.ch08.dao.UserDao">
+
+    <resultMap id="userMap" type="edu.nf.ch08.entity.Users">
+        <id property="uid" column="u_id"/>
+        <result property="userName" column="u_name"/>
+    </resultMap>
+
+    <select id="listUser" resultMap="userMap">
+        select u_id, u_name from user_info
+    </select>
+
+</mapper>
\ No newline at end of file
Index: ch02/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch02/README.md	(date 1606701481000)
+++ ch02/README.md	(date 1606701481000)
@@ -0,0 +1,1 @@
+# bean的作用域
\ No newline at end of file
Index: ch02/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch02/pom.xml	(date 1606701397000)
+++ ch02/pom.xml	(date 1606701397000)
@@ -0,0 +1,15 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <artifactId>spring-study</artifactId>
+        <groupId>edu.nf</groupId>
+        <version>1.0-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+
+    <artifactId>ch02</artifactId>
+
+
+</project>
\ No newline at end of file
Index: ch03/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch03/README.md	(date 1606704216000)
+++ ch03/README.md	(date 1606704216000)
@@ -0,0 +1,1 @@
+# Bean的id和name属性
\ No newline at end of file
Index: ch03/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch03/pom.xml	(date 1606704000000)
+++ ch03/pom.xml	(date 1606704000000)
@@ -0,0 +1,15 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <artifactId>spring-study</artifactId>
+        <groupId>edu.nf</groupId>
+        <version>1.0-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+
+    <artifactId>ch03</artifactId>
+
+
+</project>
\ No newline at end of file
Index: ch10/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch10/README.md	(date 1607042901000)
+++ ch10/README.md	(date 1607042901000)
@@ -0,0 +1,1 @@
+# @PropertySource和@Value的使用
\ No newline at end of file
Index: ch17/src/test/java/edu/nf/ch17/test/SpringTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch17/src/test/java/edu/nf/ch17/test/SpringTest.java	(date 1607411330000)
+++ ch17/src/test/java/edu/nf/ch17/test/SpringTest.java	(date 1607411330000)
@@ -0,0 +1,20 @@
+package edu.nf.ch17.test;
+
+import edu.nf.ch17.service.StuService;
+import org.junit.Test;
+import org.springframework.context.ApplicationContext;
+import org.springframework.context.support.ClassPathXmlApplicationContext;
+
+/**
+ * @author wangl
+ * @date 2020/12/8
+ */
+public class SpringTest {
+
+    @Test
+    public void testAop(){
+        ApplicationContext context = new ClassPathXmlApplicationContext("applicationContext.xml");
+        StuService service = context.getBean("stuService", StuService.class);
+        service.save("user1");
+    }
+}
Index: ch10/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch10/pom.xml	(date 1607042853000)
+++ ch10/pom.xml	(date 1607042853000)
@@ -0,0 +1,19 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <artifactId>spring-study</artifactId>
+        <groupId>edu.nf</groupId>
+        <version>1.0-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+
+    <artifactId>ch10</artifactId>
+
+    <properties>
+        <maven.compiler.source>8</maven.compiler.source>
+        <maven.compiler.target>8</maven.compiler.target>
+    </properties>
+
+</project>
\ No newline at end of file
Index: ch01/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch01/README.md	(date 1606701299000)
+++ ch01/README.md	(date 1606701299000)
@@ -0,0 +1,1 @@
+# Spring中的容器（Container）
\ No newline at end of file
Index: ch17/src/main/java/edu/nf/ch17/aspect/StuServiceAspect.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch17/src/main/java/edu/nf/ch17/aspect/StuServiceAspect.java	(date 1607411392000)
+++ ch17/src/main/java/edu/nf/ch17/aspect/StuServiceAspect.java	(date 1607411392000)
@@ -0,0 +1,77 @@
+package edu.nf.ch17.aspect;
+
+import org.aspectj.lang.JoinPoint;
+import org.aspectj.lang.ProceedingJoinPoint;
+import org.aspectj.lang.annotation.*;
+import org.springframework.context.annotation.ComponentScan;
+import org.springframework.stereotype.Component;
+
+/**
+ * @author wangl
+ * @date 2020/12/8
+ * @Aspect注解标注当前类为一个切面
+ * @Component表示为收ioc容器管理
+ */
+@Aspect
+@Component
+public class StuServiceAspect {
+
+    /**
+     * 定义切入点，只能给定义一个方法，不需要任何逻辑
+     * 此方法仅仅给@Pointcut注解标注，用于声明切入点表达式
+     */
+    @Pointcut("execution(* edu.nf.ch17.service.impl.*.*(..))")
+    public void myPointcut(){}
+
+    /**
+     * 前置通知
+     * @param jp
+     */
+    @Before("myPointcut()")
+    public void before(JoinPoint jp){
+        System.out.println("前置通知, 参数：" + jp.getArgs()[0]);
+    }
+
+    /**
+     * 环绕通知
+     * @param pjp
+     * @throws Throwable
+     */
+    @Around("myPointcut()")
+    public Object around(ProceedingJoinPoint pjp) throws Throwable{
+        System.out.println("环绕通知前");
+        //调用目标方法
+        Object returnVal = pjp.proceed();
+        System.out.println("环绕通知后");
+        return returnVal;
+    }
+
+    /**
+     * 后置通知
+     * @param jp
+     * @param returnVal
+     */
+    @AfterReturning(value = "myPointcut()", returning = "returnVal")
+    public void afterReturning(JoinPoint jp, String returnVal){
+        System.out.println("后置通知，返回值：" + returnVal);
+    }
+
+    /**
+     * 异常通知
+     * @param jp
+     * @param e
+     */
+    @AfterThrowing(value = "myPointcut()", throwing = "e")
+    public void afterThrowing(JoinPoint jp, Exception e){
+        System.out.println("异常通知，异常：" + e.getMessage());
+    }
+
+    /**
+     * 最终通知
+     * @param jp
+     */
+    @After("myPointcut()")
+    public void after(JoinPoint jp){
+        System.out.println("最终通知");
+    }
+}
Index: ch17/src/main/resources/applicationContext.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch17/src/main/resources/applicationContext.xml	(date 1607410678000)
+++ ch17/src/main/resources/applicationContext.xml	(date 1607410678000)
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xmlns:context="http://www.springframework.org/schema/context"
+       xmlns:aop="http://www.springframework.org/schema/aop"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">
+
+    <!-- 启用注解处理器并执行扫描 -->
+    <context:component-scan base-package="edu.nf.ch17"/>
+    <!-- 启用AspectJ注解处理器,proxy-target-class表示是否强制使用cglib-->
+    <aop:aspectj-autoproxy/>
+</beans>
\ No newline at end of file
Index: ch01/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch01/pom.xml	(date 1606697693000)
+++ ch01/pom.xml	(date 1606697693000)
@@ -0,0 +1,15 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <artifactId>spring-study</artifactId>
+        <groupId>edu.nf</groupId>
+        <version>1.0-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+
+    <artifactId>ch01</artifactId>
+
+
+</project>
\ No newline at end of file
Index: ch09/src/main/java/edu/nf/ch09/dao/UserDao.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch09/src/main/java/edu/nf/ch09/dao/UserDao.java	(date 1606958998000)
+++ ch09/src/main/java/edu/nf/ch09/dao/UserDao.java	(date 1606958998000)
@@ -0,0 +1,10 @@
+package edu.nf.ch09.dao;
+
+/**
+ * @author wangl
+ * @date 2020/12/3
+ */
+public interface UserDao {
+
+    void save();
+}
Index: ch17/src/main/java/edu/nf/ch17/service/StuService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch17/src/main/java/edu/nf/ch17/service/StuService.java	(date 1607409991000)
+++ ch17/src/main/java/edu/nf/ch17/service/StuService.java	(date 1607409991000)
@@ -0,0 +1,15 @@
+package edu.nf.ch17.service;
+
+/**
+ * @author wangl
+ * @date 2020/12/8
+ */
+public interface StuService {
+
+    /**
+     * 保存学生信息
+     * @param name
+     * @return
+     */
+    String save(String name);
+}
Index: ch19/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch19/README.md	(date 1607476051000)
+++ ch19/README.md	(date 1607476051000)
@@ -0,0 +1,1 @@
+# 容器的事件监听
\ No newline at end of file
Index: ch09/src/main/java/edu/nf/ch09/dao/impl/UserDaoImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch09/src/main/java/edu/nf/ch09/dao/impl/UserDaoImpl.java	(date 1606961066000)
+++ ch09/src/main/java/edu/nf/ch09/dao/impl/UserDaoImpl.java	(date 1606961066000)
@@ -0,0 +1,20 @@
+package edu.nf.ch09.dao.impl;
+
+import edu.nf.ch09.dao.UserDao;
+import org.springframework.stereotype.Component;
+import org.springframework.stereotype.Repository;
+
+/**
+ * @author wangl
+ * @date 2020/12/3
+ */
+//@Component("userDao")
+//可以使用@Repository注解来标识dao层
+@Repository("userDao")
+public class UserDaoImpl implements UserDao {
+
+    @Override
+    public void save() {
+        System.out.println("insert into user_info");
+    }
+}
Index: ch19/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch19/pom.xml	(date 1607476030000)
+++ ch19/pom.xml	(date 1607476030000)
@@ -0,0 +1,19 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <artifactId>spring-study</artifactId>
+        <groupId>edu.nf</groupId>
+        <version>1.0-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+
+    <artifactId>ch19</artifactId>
+
+    <properties>
+        <maven.compiler.source>8</maven.compiler.source>
+        <maven.compiler.target>8</maven.compiler.target>
+    </properties>
+
+</project>
\ No newline at end of file
Index: ch09/src/main/java/edu/nf/ch09/service/impl/UserServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch09/src/main/java/edu/nf/ch09/service/impl/UserServiceImpl.java	(date 1606980272000)
+++ ch09/src/main/java/edu/nf/ch09/service/impl/UserServiceImpl.java	(date 1606980272000)
@@ -0,0 +1,31 @@
+package edu.nf.ch09.service.impl;
+
+import edu.nf.ch09.dao.UserDao;
+import edu.nf.ch09.service.UserService;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Component;
+import org.springframework.stereotype.Service;
+
+/**
+ * @author wangl
+ * @date 2020/12/3
+ */
+//@Component("userService")
+//可以使用@Service注解来标识业务层
+@Service("userService")
+public class UserServiceImpl implements UserService {
+
+    private UserDao userDao;
+
+    //注入UserDao
+    @Autowired
+    public void setUserDao(UserDao userDao) {
+        this.userDao = userDao;
+    }
+
+    @Override
+    public void add() {
+        System.out.println("执行UserServiceImpl");
+        userDao.save();
+    }
+}
Index: ch09/src/main/java/edu/nf/ch09/service/UserService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch09/src/main/java/edu/nf/ch09/service/UserService.java	(date 1606958939000)
+++ ch09/src/main/java/edu/nf/ch09/service/UserService.java	(date 1606958939000)
@@ -0,0 +1,10 @@
+package edu.nf.ch09.service;
+
+/**
+ * @author wangl
+ * @date 2020/12/3
+ */
+public interface UserService {
+
+    void add();
+}
Index: ch14/src/main/java/edu/nf/ch14/aspect/UserServiceAspect.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch14/src/main/java/edu/nf/ch14/aspect/UserServiceAspect.java	(date 1607324654000)
+++ ch14/src/main/java/edu/nf/ch14/aspect/UserServiceAspect.java	(date 1607324654000)
@@ -0,0 +1,87 @@
+package edu.nf.ch14.aspect;
+
+import org.aopalliance.intercept.MethodInterceptor;
+import org.aopalliance.intercept.MethodInvocation;
+import org.springframework.aop.AfterReturningAdvice;
+import org.springframework.aop.MethodBeforeAdvice;
+import org.springframework.aop.ThrowsAdvice;
+
+import java.lang.reflect.Method;
+
+/**
+ * @author wangl
+ * @date 2020/12/7
+ * 定义一个切面
+ * 在这个类中声明需要增强的业务逻辑，
+ * 在运行时将切面里面的增强逻辑应用到具体的目标对象上
+ * （类似于回调处理器InvocationHandler）
+ * 这个切面可以实现更多的接口来完成不同的增强
+ *
+ * Advice（通知/增强）
+ * MethodBeforeAdvice接口用于实现前置通知，在调用目标方法前执行的逻辑
+ * AfterReturningAdvice接口用于实现后置通知，在目标方法返回后执行的逻辑
+ * MethodInterceptor接口用于实现环绕通知，在目标方法前后都执行的逻辑
+ * ThrowsAdvice接口用于实现异常通知，在目标方法抛出异常后执行的逻辑
+ */
+public class UserServiceAspect implements MethodBeforeAdvice,
+        AfterReturningAdvice, MethodInterceptor, ThrowsAdvice {
+
+    /**
+     * 前置通知
+     * @param method 当前目标对象正在调用的方法
+     * @param args 目标方法所需的参数
+     * @param target 目标对象（被代理的对象）
+     * @throws Throwable
+     */
+    @Override
+    public void before(Method method, Object[] args, Object target) throws Throwable {
+        System.out.println("前置通知");
+    }
+
+    /**
+     * 后置通知
+     * （注意：如果产生了异常，则不会执行后置通知，因为没有正常返回是不会执行的）
+     * @param returnValue 目标方法的返回值
+     * @param method 当前目标对象正在调用的方法
+     * @param args 目标方法所需的参数
+     * @param target 目标对象
+     * @throws Throwable
+     */
+    @Override
+    public void afterReturning(Object returnValue, Method method, Object[] args, Object target) throws Throwable {
+        System.out.println("后置通知");
+    }
+
+    /**
+     * 环绕通知
+     * @param invocation 方法回调处理器，用于调用目标对象的方法
+     * @return
+     * @throws Throwable
+     */
+    @Override
+    public Object invoke(MethodInvocation invocation) throws Throwable {
+        System.out.println("环绕通知前");
+        //调用目标对象方法
+        Object returnVal = invocation.proceed();
+        System.out.println("环绕通知后");
+        return returnVal;
+    }
+
+    /**
+     * org.springframework.aop.ThrowsAdvice interface does not contain any methods.
+     * It is a tag interface identifying that the given object implements one or more typed
+     * throws advice methods. These should be in the following form :
+     * afterThrowing([Method, args, target], subclassOfThrowable)
+     *
+     * 异常通知，参照官方文档ThrowsAdvice
+     * 该方法的名称必须叫做afterThrowing，
+     * 该方法还有三个可选参数（method，args，target）
+     * 则三个参数要么全部声明，要么全部省略
+     * 但Exception参数必须保留
+     *
+     * @param e 异常对象
+     */
+    public void afterThrowing(Exception e){
+        System.out.println("异常通知, " + e.getMessage());
+    }
+}
Index: ch12/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch12/README.md	(date 1607046263000)
+++ ch12/README.md	(date 1607046263000)
@@ -0,0 +1,1 @@
+# 使用Java配置类以及@Bean注解的使用
\ No newline at end of file
Index: ch09/src/main/java/edu/nf/ch09/controller/UserController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch09/src/main/java/edu/nf/ch09/controller/UserController.java	(date 1606980513000)
+++ ch09/src/main/java/edu/nf/ch09/controller/UserController.java	(date 1606980513000)
@@ -0,0 +1,80 @@
+package edu.nf.ch09.controller;
+
+import edu.nf.ch09.service.UserService;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.beans.factory.annotation.Qualifier;
+import org.springframework.context.annotation.Primary;
+import org.springframework.context.annotation.Scope;
+import org.springframework.stereotype.Component;
+import org.springframework.stereotype.Controller;
+
+import javax.annotation.PostConstruct;
+import javax.annotation.PreDestroy;
+import javax.annotation.Resource;
+
+/**
+ * @author wangl
+ * @date 2020/12/3
+ */
+//使用Component注解标识类，表示为容器受管的Bean
+//value属性用于指定Bean的id，如果不指定，默认就是类名
+//将首字母变为小写后作为id
+//@Component("controller")
+
+//从3.0后开始，每个成都有对应的注解来标识，作用和
+//@Component注解时一样的，这样标识起来更加的明确
+@Controller("controller")
+//@Scope注解用于指定Bean的作用域，作用和xml中的一致
+@Scope("prototype")
+public class UserController {
+
+    //字段注入
+    @Autowired
+    //通过@Qualifier指定Bean的id
+    //@Qualifier("stuService")
+
+    //也可以使用@Resource注解来注入，它是javax包下提供的注解
+    //Spring可以支持此注解，name指定要注入的Bean的id
+    //但这个注解只能标注在字段以及set方法上，不能标注在构造方法上
+    //@Resource(name = "stuService")
+    private UserService service;
+
+    //构造方法注入
+    //@Autowired
+    /*public UserController(UserService service) {
+        this.service = service;
+    }*/
+
+    //注入Service对象
+    //@Autowired注解用于完成注入配置，
+    // 可以标识在set方法上、构造方法上、字段上
+    // 注意：当注入的实现类只有一个的时候，Spring
+    //会自动找到它并直接注入进来。
+    //如果有多个实现类的时候，先根据变量名称作为id从容器中查找
+    //，如果匹配的到，则直接注入，匹配不到则抛出有多个实现类的异常。
+    // 此时就必须结合@Qualifier注解一起使用，这个注解的作用是
+    //指定要注入哪一个实现类
+
+    //@Autowired
+    //使用Resource注解注入
+    //@Resource(name = "stuService")
+    /*public void setService(UserService service) {
+        this.service = service;
+    }*/
+
+    public void add(){
+        service.add();
+    }
+
+    //@PostConstruct注解标识自定义初始化方法
+    @PostConstruct
+    public void init(){
+        System.out.println("执行自定义的init方法");
+    }
+
+    //@PreDestroy注解标识自定义的销毁方法
+    @PreDestroy
+    public void destroy(){
+        System.out.println("执行自定义的destroy方法");
+    }
+}
Index: ch17/target/classes/applicationContext.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch17/target/classes/applicationContext.xml	(date 1607411331000)
+++ ch17/target/classes/applicationContext.xml	(date 1607411331000)
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xmlns:context="http://www.springframework.org/schema/context"
+       xmlns:aop="http://www.springframework.org/schema/aop"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">
+
+    <!-- 启用注解处理器并执行扫描 -->
+    <context:component-scan base-package="edu.nf.ch17"/>
+    <!-- 启用AspectJ注解处理器,proxy-target-class表示是否强制使用cglib-->
+    <aop:aspectj-autoproxy/>
+</beans>
\ No newline at end of file
Index: ch09/src/main/java/edu/nf/ch09/service/impl/StuServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch09/src/main/java/edu/nf/ch09/service/impl/StuServiceImpl.java	(date 1606980272000)
+++ ch09/src/main/java/edu/nf/ch09/service/impl/StuServiceImpl.java	(date 1606980272000)
@@ -0,0 +1,27 @@
+package edu.nf.ch09.service.impl;
+
+import edu.nf.ch09.dao.UserDao;
+import edu.nf.ch09.service.UserService;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.context.annotation.Primary;
+import org.springframework.stereotype.Service;
+
+/**
+ * @author wangl
+ * @date 2020/12/3
+ */
+@Service("stuService")
+//@Primary注解标识在类上，表示优先注入的Bean
+//@Primary
+public class StuServiceImpl implements UserService {
+
+    //注入UserDao
+    @Autowired
+    private UserDao userDao;
+
+    @Override
+    public void add() {
+        System.out.println("执行StuServiceImpl");
+        userDao.save();
+    }
+}
Index: ch12/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch12/pom.xml	(date 1607046193000)
+++ ch12/pom.xml	(date 1607046193000)
@@ -0,0 +1,19 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <artifactId>spring-study</artifactId>
+        <groupId>edu.nf</groupId>
+        <version>1.0-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+
+    <artifactId>ch12</artifactId>
+
+    <properties>
+        <maven.compiler.source>8</maven.compiler.source>
+        <maven.compiler.target>8</maven.compiler.target>
+    </properties>
+
+</project>
\ No newline at end of file
Index: ch09/src/main/resources/beans.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch09/src/main/resources/beans.xml	(date 1606960341000)
+++ ch09/src/main/resources/beans.xml	(date 1606960341000)
@@ -0,0 +1,17 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xmlns:context="http://www.springframework.org/schema/context"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans
+       http://www.springframework.org/schema/beans/spring-beans.xsd
+       http://www.springframework.org/schema/context
+       https://www.springframework.org/schema/context/spring-context.xsd">
+
+    <!-- 启用注解处理器， 这样就可以在代码中使用Spring提供的相关注解 -->
+    <!--<context:annotation-config/>-->
+
+    <!-- 配置包扫描，也就是扫描那些包下带有注解的类，将其纳入ioc容器管理-->
+    <!-- 注意：如果配置了component-scan，那么就不需要再配置annotation-config，
+         因为component-scan会自动启用注解处理器-->
+    <context:component-scan base-package="edu.nf.ch09"/>
+</beans>
\ No newline at end of file
Index: ch21/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch21/README.md	(date 1607482205000)
+++ ch21/README.md	(date 1607482205000)
@@ -0,0 +1,1 @@
+# 定时任务（基于注解和配置类）
\ No newline at end of file
Index: ch14/src/main/java/edu/nf/ch14/service/StuService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch14/src/main/java/edu/nf/ch14/service/StuService.java	(date 1607324899000)
+++ ch14/src/main/java/edu/nf/ch14/service/StuService.java	(date 1607324899000)
@@ -0,0 +1,12 @@
+package edu.nf.ch14.service;
+
+/**
+ * @author wangl
+ * @date 2020/12/7
+ */
+public class StuService {
+
+    public void add(){
+        System.out.println("添加学生信息");
+    }
+}
Index: ch21/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch21/pom.xml	(date 1607482168000)
+++ ch21/pom.xml	(date 1607482168000)
@@ -0,0 +1,19 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <artifactId>spring-study</artifactId>
+        <groupId>edu.nf</groupId>
+        <version>1.0-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+
+    <artifactId>ch21</artifactId>
+
+    <properties>
+        <maven.compiler.source>8</maven.compiler.source>
+        <maven.compiler.target>8</maven.compiler.target>
+    </properties>
+
+</project>
\ No newline at end of file
Index: ch20/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch20/README.md	(date 1607478538000)
+++ ch20/README.md	(date 1607478538000)
@@ -0,0 +1,1 @@
+# 定时任务（基于XML配置）
\ No newline at end of file
Index: ch09/src/test/java/edu/nf/ch09/test/SpringTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch09/src/test/java/edu/nf/ch09/test/SpringTest.java	(date 1606961484000)
+++ ch09/src/test/java/edu/nf/ch09/test/SpringTest.java	(date 1606961484000)
@@ -0,0 +1,20 @@
+package edu.nf.ch09.test;
+
+import edu.nf.ch09.controller.UserController;
+import org.junit.Test;
+import org.springframework.context.ApplicationContext;
+import org.springframework.context.support.ClassPathXmlApplicationContext;
+
+/**
+ * @author wangl
+ * @date 2020/12/3
+ */
+public class SpringTest {
+
+    @Test
+    public void testIoc(){
+        ApplicationContext context = new ClassPathXmlApplicationContext("beans.xml");
+        UserController controller = context.getBean("controller", UserController.class);
+        controller.add();
+    }
+}
Index: ch14/src/main/java/edu/nf/ch14/service/UserService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch14/src/main/java/edu/nf/ch14/service/UserService.java	(date 1607309130000)
+++ ch14/src/main/java/edu/nf/ch14/service/UserService.java	(date 1607309130000)
@@ -0,0 +1,18 @@
+package edu.nf.ch14.service;
+
+/**
+ * @author wangl
+ * @date 2020/12/7
+ */
+public interface UserService {
+    /**
+     * 添加用户
+     */
+    void add();
+
+    /**
+     * 更新用户
+     */
+    void update();
+
+}
Index: ch20/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch20/pom.xml	(date 1607478493000)
+++ ch20/pom.xml	(date 1607478493000)
@@ -0,0 +1,19 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <artifactId>spring-study</artifactId>
+        <groupId>edu.nf</groupId>
+        <version>1.0-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+
+    <artifactId>ch20</artifactId>
+
+    <properties>
+        <maven.compiler.source>8</maven.compiler.source>
+        <maven.compiler.target>8</maven.compiler.target>
+    </properties>
+
+</project>
\ No newline at end of file
Index: ch05/src/main/java/edu/nf/ch05/dao/impl/UserDaoImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch05/src/main/java/edu/nf/ch05/dao/impl/UserDaoImpl.java	(date 1606790225000)
+++ ch05/src/main/java/edu/nf/ch05/dao/impl/UserDaoImpl.java	(date 1606790225000)
@@ -0,0 +1,16 @@
+package edu.nf.ch05.dao.impl;
+
+import edu.nf.ch05.dao.UserDao;
+import edu.nf.ch05.entity.Users;
+
+/**
+ * @author wangl
+ * @date 2020/12/1
+ */
+public class UserDaoImpl implements UserDao {
+
+    @Override
+    public void save(Users user) {
+        System.out.println("insert into user_info values(?,?)");
+    }
+}
Index: ch05/src/main/java/edu/nf/ch05/dao/UserDao.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch05/src/main/java/edu/nf/ch05/dao/UserDao.java	(date 1606790117000)
+++ ch05/src/main/java/edu/nf/ch05/dao/UserDao.java	(date 1606790117000)
@@ -0,0 +1,15 @@
+package edu.nf.ch05.dao;
+
+import edu.nf.ch05.entity.Users;
+
+/**
+ * @author wangl
+ * @date 2020/12/1
+ */
+public interface UserDao {
+    /**
+     * 添加用户
+     * @param user
+     */
+    void save(Users user);
+}
Index: ch09/target/classes/beans.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch09/target/classes/beans.xml	(date 1606961457000)
+++ ch09/target/classes/beans.xml	(date 1606961457000)
@@ -0,0 +1,17 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xmlns:context="http://www.springframework.org/schema/context"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans
+       http://www.springframework.org/schema/beans/spring-beans.xsd
+       http://www.springframework.org/schema/context
+       https://www.springframework.org/schema/context/spring-context.xsd">
+
+    <!-- 启用注解处理器， 这样就可以在代码中使用Spring提供的相关注解 -->
+    <!--<context:annotation-config/>-->
+
+    <!-- 配置包扫描，也就是扫描那些包下带有注解的类，将其纳入ioc容器管理-->
+    <!-- 注意：如果配置了component-scan，那么就不需要再配置annotation-config，
+         因为component-scan会自动启用注解处理器-->
+    <context:component-scan base-package="edu.nf.ch09"/>
+</beans>
\ No newline at end of file
Index: ch14/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch14/README.md	(date 1607308951000)
+++ ch14/README.md	(date 1607308951000)
@@ -0,0 +1,4 @@
+# Spring AOP （面向切面编程）
+Spring AOP是基于运行时创建代理的方式来实现，
+支持JDK动态代理和cglib动态代理。并且还结合了
+AspectJ框架的注解以及切入点表达式。
\ No newline at end of file
Index: ch05/src/main/java/edu/nf/ch05/entity/Users.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch05/src/main/java/edu/nf/ch05/entity/Users.java	(date 1606790101000)
+++ ch05/src/main/java/edu/nf/ch05/entity/Users.java	(date 1606790101000)
@@ -0,0 +1,27 @@
+package edu.nf.ch05.entity;
+
+/**
+ * @author wangl
+ * @date 2020/12/1
+ */
+public class Users {
+
+    private Integer id;
+    private String name;
+
+    public Integer getId() {
+        return id;
+    }
+
+    public void setId(Integer id) {
+        this.id = id;
+    }
+
+    public String getName() {
+        return name;
+    }
+
+    public void setName(String name) {
+        this.name = name;
+    }
+}
Index: ch14/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch14/pom.xml	(date 1607308570000)
+++ ch14/pom.xml	(date 1607308570000)
@@ -0,0 +1,35 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <artifactId>spring-study</artifactId>
+        <groupId>edu.nf</groupId>
+        <version>1.0-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+
+    <artifactId>ch14</artifactId>
+
+    <properties>
+        <maven.compiler.source>8</maven.compiler.source>
+        <maven.compiler.target>8</maven.compiler.target>
+    </properties>
+
+    <!-- AOP所需的依赖 -->
+    <dependencies>
+        <!-- aspectJ相关依赖 -->
+        <dependency>
+            <groupId>org.aspectj</groupId>
+            <artifactId>aspectjweaver</artifactId>
+            <version>1.9.5</version>
+        </dependency>
+        <!-- cglib -->
+        <dependency>
+            <groupId>cglib</groupId>
+            <artifactId>cglib-nodep</artifactId>
+            <version>3.3.0</version>
+        </dependency>
+    </dependencies>
+
+</project>
\ No newline at end of file
Index: ch14/src/main/java/edu/nf/ch14/service/impl/UserServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch14/src/main/java/edu/nf/ch14/service/impl/UserServiceImpl.java	(date 1607324681000)
+++ ch14/src/main/java/edu/nf/ch14/service/impl/UserServiceImpl.java	(date 1607324681000)
@@ -0,0 +1,21 @@
+package edu.nf.ch14.service.impl;
+
+import edu.nf.ch14.service.UserService;
+
+/**
+ * @author wangl
+ * @date 2020/12/7
+ */
+public class UserServiceImpl implements UserService {
+
+    @Override
+    public void add() {
+        System.out.println("添加用户");
+        //System.out.println(10/0);
+    }
+
+    @Override
+    public void update() {
+        System.out.println("更新用户");
+    }
+}
Index: ch13/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch13/README.md	(date 1607303867000)
+++ ch13/README.md	(date 1607303867000)
@@ -0,0 +1,1 @@
+# JDK与CGLIB动态代理
\ No newline at end of file
Index: ch05/src/main/java/edu/nf/ch05/service/UserService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch05/src/main/java/edu/nf/ch05/service/UserService.java	(date 1606790283000)
+++ ch05/src/main/java/edu/nf/ch05/service/UserService.java	(date 1606790283000)
@@ -0,0 +1,16 @@
+package edu.nf.ch05.service;
+
+import edu.nf.ch05.entity.Users;
+
+/**
+ * @author wangl
+ * @date 2020/12/1
+ */
+public interface UserService {
+
+    /**
+     * 添加用户
+     * @param user
+     */
+    void add(Users user);
+}
Index: ch13/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch13/pom.xml	(date 1607306124000)
+++ ch13/pom.xml	(date 1607306124000)
@@ -0,0 +1,27 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <artifactId>spring-study</artifactId>
+        <groupId>edu.nf</groupId>
+        <version>1.0-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+
+    <artifactId>ch13</artifactId>
+
+    <properties>
+        <maven.compiler.source>8</maven.compiler.source>
+        <maven.compiler.target>8</maven.compiler.target>
+    </properties>
+
+    <dependencies>
+        <dependency>
+            <groupId>cglib</groupId>
+            <artifactId>cglib-nodep</artifactId>
+            <version>3.3.0</version>
+        </dependency>
+    </dependencies>
+
+</project>
\ No newline at end of file
Index: ch18/src/main/java/edu/nf/ch18/config/SpringConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch18/src/main/java/edu/nf/ch18/config/SpringConfig.java	(date 1607475685000)
+++ ch18/src/main/java/edu/nf/ch18/config/SpringConfig.java	(date 1607475685000)
@@ -0,0 +1,19 @@
+package edu.nf.ch18.config;
+
+import org.springframework.context.annotation.ComponentScan;
+import org.springframework.context.annotation.Configuration;
+import org.springframework.context.annotation.EnableAspectJAutoProxy;
+
+/**
+ * @author wangl
+ * @date 2020/12/9
+ *
+ * Java配置类，取代xml
+ */
+@Configuration
+@ComponentScan(basePackages = "edu.nf.ch18")
+//启用AOP注解处理器，等同于xml中的<aop:aspectj-autoproxy/>
+//proxyTargetClass双属性表示是否强制使用cglib动态代理
+@EnableAspectJAutoProxy(proxyTargetClass = true)
+public class SpringConfig {
+}
Index: ch18/src/main/java/edu/nf/ch18/aspect/StuServiceAspect.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch18/src/main/java/edu/nf/ch18/aspect/StuServiceAspect.java	(date 1607475586000)
+++ ch18/src/main/java/edu/nf/ch18/aspect/StuServiceAspect.java	(date 1607475586000)
@@ -0,0 +1,76 @@
+package edu.nf.ch18.aspect;
+
+import org.aspectj.lang.JoinPoint;
+import org.aspectj.lang.ProceedingJoinPoint;
+import org.aspectj.lang.annotation.*;
+import org.springframework.stereotype.Component;
+
+/**
+ * @author wangl
+ * @date 2020/12/8
+ * @Aspect注解标注当前类为一个切面
+ * @Component表示为收ioc容器管理
+ */
+@Aspect
+@Component
+public class StuServiceAspect {
+
+    /**
+     * 定义切入点，只能给定义一个方法，不需要任何逻辑
+     * 此方法仅仅给@Pointcut注解标注，用于声明切入点表达式
+     */
+    @Pointcut("execution(* edu.nf.ch18.service.impl.*.*(..))")
+    public void myPointcut(){}
+
+    /**
+     * 前置通知
+     * @param jp
+     */
+    @Before("myPointcut()")
+    public void before(JoinPoint jp){
+        System.out.println("前置通知, 参数：" + jp.getArgs()[0]);
+    }
+
+    /**
+     * 环绕通知
+     * @param pjp
+     * @throws Throwable
+     */
+    @Around("myPointcut()")
+    public Object around(ProceedingJoinPoint pjp) throws Throwable{
+        System.out.println("环绕通知前");
+        //调用目标方法
+        Object returnVal = pjp.proceed();
+        System.out.println("环绕通知后");
+        return returnVal;
+    }
+
+    /**
+     * 后置通知
+     * @param jp
+     * @param returnVal
+     */
+    @AfterReturning(value = "myPointcut()", returning = "returnVal")
+    public void afterReturning(JoinPoint jp, String returnVal){
+        System.out.println("后置通知，返回值：" + returnVal);
+    }
+
+    /**
+     * 异常通知
+     * @param jp
+     * @param e
+     */
+    @AfterThrowing(value = "myPointcut()", throwing = "e")
+    public void afterThrowing(JoinPoint jp, Exception e){
+        System.out.println("异常通知，异常：" + e.getMessage());
+    }
+
+    /**
+     * 最终通知
+     * @param jp
+     */
+    @After("myPointcut()")
+    public void after(JoinPoint jp){
+        System.out.println("最终通知");
+    }
+}
Index: ch05/src/main/java/edu/nf/ch05/service/impl/UserServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch05/src/main/java/edu/nf/ch05/service/impl/UserServiceImpl.java	(date 1606870062000)
+++ ch05/src/main/java/edu/nf/ch05/service/impl/UserServiceImpl.java	(date 1606870062000)
@@ -0,0 +1,44 @@
+package edu.nf.ch05.service.impl;
+
+import edu.nf.ch05.dao.UserDao;
+import edu.nf.ch05.dao.impl.UserDaoImpl;
+import edu.nf.ch05.entity.Users;
+import edu.nf.ch05.service.UserService;
+import org.springframework.context.ApplicationContext;
+import org.springframework.context.support.ClassPathXmlApplicationContext;
+
+/**
+ * @author wangl
+ * @date 2020/12/1
+ */
+public class UserServiceImpl implements UserService {
+
+    private UserDao userdao;
+
+    public UserServiceImpl() {
+    }
+
+    /**
+     * 构造方法注入
+     * @param userdao
+     */
+    public UserServiceImpl(UserDao userdao) {
+        this.userdao = userdao;
+    }
+
+    /**
+     * 提供一个set方法给Spring容器，这个方法就是注入的入口方法。
+     * 那么Spring就会调用这个方法，从容器中将一个UserDao的实现类
+     * 给注入进来，赋值给上面的接口
+     *
+     * @param dao
+     */
+    public void setDao(UserDao dao) {
+        this.userdao = dao;
+    }
+
+    @Override
+    public void add(Users user) {
+        userdao.save(user);
+    }
+}
Index: ch16/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch16/README.md	(date 1607394843000)
+++ ch16/README.md	(date 1607394843000)
@@ -0,0 +1,1 @@
+# 使用AspectJ配置AOP， 使用切面（Aspect）
\ No newline at end of file
Index: ch18/src/main/java/edu/nf/ch18/service/impl/StuServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch18/src/main/java/edu/nf/ch18/service/impl/StuServiceImpl.java	(date 1607475127000)
+++ ch18/src/main/java/edu/nf/ch18/service/impl/StuServiceImpl.java	(date 1607475127000)
@@ -0,0 +1,18 @@
+package edu.nf.ch18.service.impl;
+
+import edu.nf.ch18.service.StuService;
+import org.springframework.stereotype.Service;
+
+/**
+ * @author wangl
+ * @date 2020/12/8
+ */
+@Service("stuService")
+public class StuServiceImpl implements StuService {
+
+    @Override
+    public String save(String name) {
+        System.out.println("insert into stu_info values("+name+")");
+        return "success";
+    }
+}
Index: ch05/src/main/resources/beans.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch05/src/main/resources/beans.xml	(date 1606870316000)
+++ ch05/src/main/resources/beans.xml	(date 1606870316000)
@@ -0,0 +1,22 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
+
+    <!-- 配置UserDao -->
+    <bean id="userDao" class="edu.nf.ch05.dao.impl.UserDaoImpl"/>
+
+    <!-- 配置UserService -->
+    <bean id="userService" class="edu.nf.ch05.service.impl.UserServiceImpl">
+        <!-- 给UserService注入一个UserDao，通过set方法注入, name
+         对应的是setDao方法 去掉set并把D改为小写，就是dao。
+         ref指定上面配置的UserDao的id-->
+        <!--<property name="dao" ref="userDao"/>-->
+
+        <!-- 构造方法注入, name指定构造方法的参数名，ref引用UserDao的id -->
+        <constructor-arg name="userdao" ref="userDao"/>
+        <!-- 也可以通过参数下标（index）注入 -->
+        <!--<constructor-arg index="0" ref="userDao"/>-->
+    </bean>
+
+</beans>
\ No newline at end of file
Index: ch16/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch16/pom.xml	(date 1607394843000)
+++ ch16/pom.xml	(date 1607394843000)
@@ -0,0 +1,32 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <artifactId>spring-study</artifactId>
+        <groupId>edu.nf</groupId>
+        <version>1.0-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+
+    <artifactId>ch16</artifactId>
+
+    <properties>
+        <maven.compiler.source>8</maven.compiler.source>
+        <maven.compiler.target>8</maven.compiler.target>
+    </properties>
+
+    <dependencies>
+        <dependency>
+            <groupId>org.aspectj</groupId>
+            <artifactId>aspectjweaver</artifactId>
+            <version>1.9.5</version>
+        </dependency>
+        <dependency>
+            <groupId>cglib</groupId>
+            <artifactId>cglib-nodep</artifactId>
+            <version>3.3.0</version>
+        </dependency>
+    </dependencies>
+
+</project>
\ No newline at end of file
Index: ch15/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch15/README.md	(date 1607388553000)
+++ ch15/README.md	(date 1607388553000)
@@ -0,0 +1,1 @@
+# 基于AspectJ风格配置AOP，使用通知器（Advisor）
\ No newline at end of file
Index: ch15/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch15/pom.xml	(date 1607388771000)
+++ ch15/pom.xml	(date 1607388771000)
@@ -0,0 +1,31 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <artifactId>spring-study</artifactId>
+        <groupId>edu.nf</groupId>
+        <version>1.0-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+    <artifactId>ch15</artifactId>
+
+    <properties>
+        <maven.compiler.source>8</maven.compiler.source>
+        <maven.compiler.target>8</maven.compiler.target>
+    </properties>
+
+    <dependencies>
+        <dependency>
+            <groupId>org.aspectj</groupId>
+            <artifactId>aspectjweaver</artifactId>
+            <version>1.9.5</version>
+        </dependency>
+        <dependency>
+            <groupId>cglib</groupId>
+            <artifactId>cglib-nodep</artifactId>
+            <version>3.3.0</version>
+        </dependency>
+    </dependencies>
+
+</project>
\ No newline at end of file
Index: .idea/inspectionProfiles/Project_Default.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/inspectionProfiles/Project_Default.xml	(date 1606697272000)
+++ .idea/inspectionProfiles/Project_Default.xml	(date 1606697272000)
@@ -0,0 +1,36 @@
+<component name="InspectionProjectProfileManager">
+  <profile version="1.0">
+    <option name="myName" value="Project Default" />
+    <inspection_tool class="JavaDoc" enabled="true" level="WARNING" enabled_by_default="true">
+      <option name="TOP_LEVEL_CLASS_OPTIONS">
+        <value>
+          <option name="ACCESS_JAVADOC_REQUIRED_FOR" value="none" />
+          <option name="REQUIRED_TAGS" value="" />
+        </value>
+      </option>
+      <option name="INNER_CLASS_OPTIONS">
+        <value>
+          <option name="ACCESS_JAVADOC_REQUIRED_FOR" value="none" />
+          <option name="REQUIRED_TAGS" value="" />
+        </value>
+      </option>
+      <option name="METHOD_OPTIONS">
+        <value>
+          <option name="ACCESS_JAVADOC_REQUIRED_FOR" value="none" />
+          <option name="REQUIRED_TAGS" value="@return@param@throws or @exception" />
+        </value>
+      </option>
+      <option name="FIELD_OPTIONS">
+        <value>
+          <option name="ACCESS_JAVADOC_REQUIRED_FOR" value="none" />
+          <option name="REQUIRED_TAGS" value="" />
+        </value>
+      </option>
+      <option name="IGNORE_DEPRECATED" value="false" />
+      <option name="IGNORE_JAVADOC_PERIOD" value="true" />
+      <option name="IGNORE_DUPLICATED_THROWS" value="false" />
+      <option name="IGNORE_POINT_TO_ITSELF" value="false" />
+      <option name="myAdditionalJavadocTags" value="date" />
+    </inspection_tool>
+  </profile>
+</component>
\ No newline at end of file
Index: ch14/src/test/java/edu/nf/ch14/test/AopTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch14/src/test/java/edu/nf/ch14/test/AopTest.java	(date 1607325017000)
+++ ch14/src/test/java/edu/nf/ch14/test/AopTest.java	(date 1607325017000)
@@ -0,0 +1,32 @@
+package edu.nf.ch14.test;
+
+import edu.nf.ch14.service.StuService;
+import edu.nf.ch14.service.UserService;
+import org.junit.Test;
+import org.springframework.context.ApplicationContext;
+import org.springframework.context.support.ClassPathXmlApplicationContext;
+
+/**
+ * @author wangl
+ * @date 2020/12/7
+ */
+public class AopTest {
+
+    @Test
+    public void testAop(){
+        //初始化IOC容器
+        ApplicationContext context = new ClassPathXmlApplicationContext("applicationContext.xml");
+        //从容器中获取创建的代理实例
+        UserService service = context.getBean("userServiceProxy", UserService.class);
+        service.add();
+    }
+
+    @Test
+    public void testAop2(){
+        //初始化IOC容器
+        ApplicationContext context = new ClassPathXmlApplicationContext("applicationContext.xml");
+        //从容器中获取创建的代理实例
+        StuService service = context.getBean("userServiceProxy", StuService.class);
+        service.add();
+    }
+}
Index: ch05/src/test/java/edu/nf/ch05/test/IocTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch05/src/test/java/edu/nf/ch05/test/IocTest.java	(date 1606870488000)
+++ ch05/src/test/java/edu/nf/ch05/test/IocTest.java	(date 1606870488000)
@@ -0,0 +1,23 @@
+package edu.nf.ch05.test;
+
+import edu.nf.ch05.entity.Users;
+import edu.nf.ch05.service.UserService;
+import edu.nf.ch05.service.impl.UserServiceImpl;
+import org.junit.Test;
+import org.springframework.context.ApplicationContext;
+import org.springframework.context.support.ClassPathXmlApplicationContext;
+
+/**
+ * @author wangl
+ * @date 2020/12/1
+ */
+public class IocTest {
+
+    @Test
+    public void testContainer(){
+        ApplicationContext context = new ClassPathXmlApplicationContext("beans.xml");
+        UserService service = context.getBean("userService", UserService.class);
+        Users user = new Users();
+        service.add(user);
+    }
+}
Index: ch10/src/main/resources/beans.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch10/src/main/resources/beans.xml	(date 1607043769000)
+++ ch10/src/main/resources/beans.xml	(date 1607043769000)
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xmlns:context="http://www.springframework.org/schema/context"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">
+
+    <!-- 启用注解处理器并扫描 -->
+    <context:component-scan base-package="edu.nf.ch10"/>
+
+</beans>
\ No newline at end of file
Index: ch20/src/main/java/edu/nf/ch20/service/TaskService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch20/src/main/java/edu/nf/ch20/service/TaskService.java	(date 1607479218000)
+++ ch20/src/main/java/edu/nf/ch20/service/TaskService.java	(date 1607479218000)
@@ -0,0 +1,19 @@
+package edu.nf.ch20.service;
+
+/**
+ * @author wangl
+ * @date 2020/12/9
+ * 定时任务处理服务
+ */
+public interface TaskService {
+
+    /**
+     * 定时备份
+     */
+    void backup();
+
+    /**
+     * 定时清理
+     */
+    void clean();
+}
Index: ch05/target/classes/beans.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch05/target/classes/beans.xml	(date 1607308686000)
+++ ch05/target/classes/beans.xml	(date 1607308686000)
@@ -0,0 +1,22 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
+
+    <!-- 配置UserDao -->
+    <bean id="userDao" class="edu.nf.ch05.dao.impl.UserDaoImpl"/>
+
+    <!-- 配置UserService -->
+    <bean id="userService" class="edu.nf.ch05.service.impl.UserServiceImpl">
+        <!-- 给UserService注入一个UserDao，通过set方法注入, name
+         对应的是setDao方法 去掉set并把D改为小写，就是dao。
+         ref指定上面配置的UserDao的id-->
+        <!--<property name="dao" ref="userDao"/>-->
+
+        <!-- 构造方法注入, name指定构造方法的参数名，ref引用UserDao的id -->
+        <constructor-arg name="userdao" ref="userDao"/>
+        <!-- 也可以通过参数下标（index）注入 -->
+        <!--<constructor-arg index="0" ref="userDao"/>-->
+    </bean>
+
+</beans>
\ No newline at end of file
Index: ch10/src/main/resources/data.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>GBK
===================================================================
--- ch10/src/main/resources/data.properties	(date 1607043103000)
+++ ch10/src/main/resources/data.properties	(date 1607043103000)
@@ -0,0 +1,2 @@
+name = user1
+age = 21
\ No newline at end of file
Index: ch10/target/classes/data.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>GBK
===================================================================
--- ch10/target/classes/data.properties	(date 1607043605000)
+++ ch10/target/classes/data.properties	(date 1607043605000)
@@ -0,0 +1,2 @@
+name = user1
+age = 21
\ No newline at end of file
Index: ch10/target/classes/beans.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch10/target/classes/beans.xml	(date 1607308686000)
+++ ch10/target/classes/beans.xml	(date 1607308686000)
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xmlns:context="http://www.springframework.org/schema/context"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">
+
+    <!-- 启用注解处理器并扫描 -->
+    <context:component-scan base-package="edu.nf.ch10"/>
+
+</beans>
\ No newline at end of file
Index: ch19/src/main/java/edu/nf/ch19/demo1/MyEventListener.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch19/src/main/java/edu/nf/ch19/demo1/MyEventListener.java	(date 1607477630000)
+++ ch19/src/main/java/edu/nf/ch19/demo1/MyEventListener.java	(date 1607477630000)
@@ -0,0 +1,27 @@
+package edu.nf.ch19.demo1;
+
+import org.springframework.context.ApplicationListener;
+import org.springframework.stereotype.Component;
+
+/**
+ * @author wangl
+ * @date 2020/12/9
+ * 自定义事件监听器，实现ApplicationListener接口
+ */
+@Component
+public class MyEventListener implements ApplicationListener<MyEvent> {
+
+    /**
+     * 当向容器发布一个事件的时候，会被此监听器监听到
+     * ，容器就会调用onApplicationEvent方法并传入事件对象
+     * @param myEvent
+     */
+    @Override
+    public void onApplicationEvent(MyEvent myEvent) {
+        //可以从事件对象中获取事件源
+        Object source = myEvent.getSource();
+        //将事件源转换为自定义的事件源对象
+        MySource mySource = (MySource) source;
+        System.out.println("处理消息：" + mySource.getMessage());
+    }
+}
Index: ch19/src/main/java/edu/nf/ch19/demo1/MySource.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch19/src/main/java/edu/nf/ch19/demo1/MySource.java	(date 1607476726000)
+++ ch19/src/main/java/edu/nf/ch19/demo1/MySource.java	(date 1607476726000)
@@ -0,0 +1,26 @@
+package edu.nf.ch19.demo1;
+
+/**
+ * @author wangl
+ * @date 2020/12/9
+ * 自定义事件源
+ */
+public class MySource {
+
+    private String message;
+
+    public MySource() {
+    }
+
+    public MySource(String message) {
+        this.message = message;
+    }
+
+    public String getMessage() {
+        return message;
+    }
+
+    public void setMessage(String message) {
+        this.message = message;
+    }
+}
Index: ch19/src/main/java/edu/nf/ch19/demo1/MyEvent.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch19/src/main/java/edu/nf/ch19/demo1/MyEvent.java	(date 1607476397000)
+++ ch19/src/main/java/edu/nf/ch19/demo1/MyEvent.java	(date 1607476397000)
@@ -0,0 +1,18 @@
+package edu.nf.ch19.demo1;
+
+import org.springframework.context.ApplicationEvent;
+
+/**
+ * @author wangl
+ * @date 2020/12/9
+ * 自定义事件对象, 继承ApplicationEvent
+ */
+public class MyEvent extends ApplicationEvent {
+
+    /**
+     * @param source 事件源
+     */
+    public MyEvent(Object source) {
+        super(source);
+    }
+}
Index: ch19/src/main/java/edu/nf/ch19/demo2/DemoEventListener.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch19/src/main/java/edu/nf/ch19/demo2/DemoEventListener.java	(date 1607478222000)
+++ ch19/src/main/java/edu/nf/ch19/demo2/DemoEventListener.java	(date 1607478222000)
@@ -0,0 +1,23 @@
+package edu.nf.ch19.demo2;
+
+import org.springframework.context.event.EventListener;
+import org.springframework.stereotype.Component;
+
+/**
+ * @author wangl
+ * @date 2020/12/9
+ * 自定义监听器
+ */
+@Component
+public class DemoEventListener {
+
+    /**
+     * 监听处理方法
+     * @param event
+     * @EventListener标注当前方法为一个事件监听处理方法
+     */
+    @EventListener
+    public void handleEvent(DemoEvent event){
+        System.out.println("处理消息：" + event.getMessage());
+    }
+}
Index: ch10/src/main/java/edu/nf/ch10/demo/TestService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch10/src/main/java/edu/nf/ch10/demo/TestService.java	(date 1607043469000)
+++ ch10/src/main/java/edu/nf/ch10/demo/TestService.java	(date 1607043469000)
@@ -0,0 +1,24 @@
+package edu.nf.ch10.demo;
+
+import org.springframework.beans.factory.annotation.Value;
+import org.springframework.context.annotation.PropertySource;
+import org.springframework.stereotype.Service;
+
+/**
+ * @author wangl
+ * @date 2020/12/4
+ */
+@Service
+//从classpath路径下找到data.properties文件
+@PropertySource(value = "classpath:data.properties")
+public class TestService {
+    //@Value注解中使用SpEl表达式指定资源文件中的key
+    @Value("${name}")
+    private String name;
+    @Value("${age}")
+    private Integer age;
+
+    public void say(){
+        System.out.println(name + ", " + age);
+    }
+}
Index: ch01/src/main/java/edu/nf/ch01/Users.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch01/src/main/java/edu/nf/ch01/Users.java	(date 1606697813000)
+++ ch01/src/main/java/edu/nf/ch01/Users.java	(date 1606697813000)
@@ -0,0 +1,12 @@
+package edu.nf.ch01;
+
+/**
+ * @author wangl
+ * @date 2020/11/30
+ */
+public class Users {
+
+    public void say(){
+        System.out.println("Hello world");
+    }
+}
Index: ch01/src/main/java/edu/nf/ch01/People.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch01/src/main/java/edu/nf/ch01/People.java	(date 1606699840000)
+++ ch01/src/main/java/edu/nf/ch01/People.java	(date 1606699840000)
@@ -0,0 +1,12 @@
+package edu.nf.ch01;
+
+/**
+ * @author wangl
+ * @date 2020/11/30
+ */
+public class People {
+
+    public void run(){
+        System.out.println("Running...");
+    }
+}
Index: ch01/src/main/java/edu/nf/ch01/factory/UsersFactoryBean.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch01/src/main/java/edu/nf/ch01/factory/UsersFactoryBean.java	(date 1606700362000)
+++ ch01/src/main/java/edu/nf/ch01/factory/UsersFactoryBean.java	(date 1606700362000)
@@ -0,0 +1,17 @@
+package edu.nf.ch01.factory;
+
+import edu.nf.ch01.Users;
+
+/**
+ * @author wangl
+ * @date 2020/11/30
+ * 自定义一个工厂给Spring，spring就会使用这个工厂
+ * 来创建bean对象。这个自定义工厂本身也会纳入spring
+ * 容器中管理，因此命名时通常都是XxxFactoryBean
+ */
+public class UsersFactoryBean {
+
+    public Users build(){
+        return new Users();
+    }
+}
Index: ch01/src/main/java/edu/nf/ch01/factory/UsersFactory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch01/src/main/java/edu/nf/ch01/factory/UsersFactory.java	(date 1606700947000)
+++ ch01/src/main/java/edu/nf/ch01/factory/UsersFactory.java	(date 1606700947000)
@@ -0,0 +1,16 @@
+package edu.nf.ch01.factory;
+
+import edu.nf.ch01.Users;
+
+/**
+ * @author wangl
+ * @date 2020/11/30
+ *
+ * 使用工厂的静态方法来创建Bean实例
+ */
+public class UsersFactory {
+
+    public static Users create(){
+        return new Users();
+    }
+}
Index: ch01/src/main/resources/beans.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch01/src/main/resources/beans.xml	(date 1606701145000)
+++ ch01/src/main/resources/beans.xml	(date 1606701145000)
@@ -0,0 +1,24 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
+
+    <!-- 配置Users类，将它纳入Spring容器中管理,
+     id指定这个类在容器中的唯一标识，不可重复-->
+    <bean id="user" class="edu.nf.ch01.Users"/>
+    <bean id="people" class="edu.nf.ch01.People"/>
+
+
+    <!-- 配置自定义工厂，这个工厂本身也是纳入spring容器中管理的 -->
+    <bean id="usersFactoryBean" class="edu.nf.ch01.factory.UsersFactoryBean"/>
+    <!-- 装配这个工厂，通过它来创建Users实例,
+    factory-bean引用上面配置的工厂bean的id，
+    factory-method指定为工厂类中的build方法-->
+    <bean id="user1" factory-bean="usersFactoryBean" factory-method="build"/>
+
+
+    <!--使用工厂的静态方法来创建bean实例，
+    注意：此时的class属性指定的不是Users的完整类名，而是工厂类的完整类名，
+    然后factory-method指定工厂类中的静态方法create-->
+    <bean id="user2" class="edu.nf.ch01.factory.UsersFactory" factory-method="create"/>
+</beans>
\ No newline at end of file
Index: ch11/src/main/java/edu/nf/ch11/dao/impl/UserDaoImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch11/src/main/java/edu/nf/ch11/dao/impl/UserDaoImpl.java	(date 1607043896000)
+++ ch11/src/main/java/edu/nf/ch11/dao/impl/UserDaoImpl.java	(date 1607043896000)
@@ -0,0 +1,18 @@
+package edu.nf.ch11.dao.impl;
+
+import edu.nf.ch11.dao.UserDao;
+import org.springframework.stereotype.Repository;
+
+/**
+ * @author wangl
+ * @date 2020/12/4
+ */
+@Repository
+public class UserDaoImpl implements UserDao {
+
+    @Override
+    public void add() {
+        System.out.println("insert into user_info...");
+    }
+}
+
Index: ch11/src/main/java/edu/nf/ch11/dao/UserDao.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch11/src/main/java/edu/nf/ch11/dao/UserDao.java	(date 1607043835000)
+++ ch11/src/main/java/edu/nf/ch11/dao/UserDao.java	(date 1607043835000)
@@ -0,0 +1,13 @@
+package edu.nf.ch11.dao;
+
+/**
+ * @author wangl
+ * @date 2020/12/4
+ */
+public interface UserDao {
+
+    /**
+     * 添加用户信息
+     */
+    void add();
+}
Index: ch11/src/main/java/edu/nf/ch11/config/SpringConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch11/src/main/java/edu/nf/ch11/config/SpringConfig.java	(date 1607044543000)
+++ ch11/src/main/java/edu/nf/ch11/config/SpringConfig.java	(date 1607044543000)
@@ -0,0 +1,19 @@
+package edu.nf.ch11.config;
+
+import org.springframework.context.annotation.ComponentScan;
+import org.springframework.context.annotation.Configuration;
+
+/**
+ * @author wangl
+ * @date 2020/12/4
+ * 自定义配置类，用于取代xml配置文件
+ * 配置类必须使用@Configuration注解标注
+ */
+@Configuration
+/**
+ * @ComponentScan注解用于扫描指定的包
+ * basePackages属性可以指定多个包路径
+ */
+@ComponentScan(basePackages = "edu.nf.ch11")
+public class SpringConfig {
+}
Index: ch11/src/main/java/edu/nf/ch11/service/impl/UserServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch11/src/main/java/edu/nf/ch11/service/impl/UserServiceImpl.java	(date 1607044155000)
+++ ch11/src/main/java/edu/nf/ch11/service/impl/UserServiceImpl.java	(date 1607044155000)
@@ -0,0 +1,26 @@
+package edu.nf.ch11.service.impl;
+
+import edu.nf.ch11.dao.UserDao;
+import edu.nf.ch11.service.UserService;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Service;
+
+/**
+ * @author wangl
+ * @date 2020/12/4
+ */
+@Service
+public class UserServiceImpl implements UserService {
+
+    /**
+     * @Autowired的required属性表示是否必须注入，默认值为true表示必须
+     * 如果没有注入则引发异常，false表示允许为null
+     */
+    @Autowired
+    private UserDao userDao;
+
+    @Override
+    public void save() {
+        userDao.add();
+    }
+}
Index: ch10/src/test/java/edu/nf/ch10/test/SpringTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch10/src/test/java/edu/nf/ch10/test/SpringTest.java	(date 1607043599000)
+++ ch10/src/test/java/edu/nf/ch10/test/SpringTest.java	(date 1607043599000)
@@ -0,0 +1,20 @@
+package edu.nf.ch10.test;
+
+import edu.nf.ch10.demo.TestService;
+import org.junit.Test;
+import org.springframework.context.ApplicationContext;
+import org.springframework.context.support.ClassPathXmlApplicationContext;
+
+/**
+ * @author wangl
+ * @date 2020/12/4
+ */
+public class SpringTest {
+
+    @Test
+    public void testProperties(){
+        ApplicationContext context = new ClassPathXmlApplicationContext("beans.xml");
+        TestService service = context.getBean("testService", TestService.class);
+        service.say();
+    }
+}
Index: ch11/src/main/java/edu/nf/ch11/service/UserService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch11/src/main/java/edu/nf/ch11/service/UserService.java	(date 1607043939000)
+++ ch11/src/main/java/edu/nf/ch11/service/UserService.java	(date 1607043939000)
@@ -0,0 +1,13 @@
+package edu.nf.ch11.service;
+
+/**
+ * @author wangl
+ * @date 2020/12/4
+ */
+public interface UserService {
+
+    /**
+     * 保存用户
+     */
+    void save();
+}
Index: ch20/src/main/resources/applicationContext.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch20/src/main/resources/applicationContext.xml	(date 1607481235000)
+++ ch20/src/main/resources/applicationContext.xml	(date 1607481235000)
@@ -0,0 +1,18 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:task="http://www.springframework.org/schema/task"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">
+    <!-- 装配业务处理类 -->
+    <bean id="taskService" class="edu.nf.ch20.service.impl.TaskServiceImpl"/>
+    <!-- 装配定时任务处理器-->
+    <bean id="demoTask" class="edu.nf.ch20.job.DemoTask">
+        <property name="taskService" ref="taskService"/>
+    </bean>
+    <!-- 配置定时任务线程池，池中分配两个线程 -->
+    <task:scheduler id="scheduler" pool-size="2"/>
+    <!-- 配置定时任务, 引用定时任务线程池的id-->
+    <task:scheduled-tasks scheduler="scheduler">
+        <task:scheduled ref="demoTask" method="executeBackup" cron="0/3 * * * * ?"/>
+        <task:scheduled ref="demoTask" method="executeClean" cron="0/2 * * * * ?"/>
+    </task:scheduled-tasks>
+</beans>
\ No newline at end of file
Index: ch11/src/main/java/edu/nf/ch11/controller/UserController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch11/src/main/java/edu/nf/ch11/controller/UserController.java	(date 1607044250000)
+++ ch11/src/main/java/edu/nf/ch11/controller/UserController.java	(date 1607044250000)
@@ -0,0 +1,20 @@
+package edu.nf.ch11.controller;
+
+import edu.nf.ch11.service.UserService;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Controller;
+
+/**
+ * @author wangl
+ * @date 2020/12/4
+ */
+@Controller
+public class UserController {
+
+    @Autowired
+    private UserService service;
+
+    public void save(){
+        service.save();
+    }
+}
Index: ch01/src/test/java/edu/nf/ch01/test/SpringContainerTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch01/src/test/java/edu/nf/ch01/test/SpringContainerTest.java	(date 1606700811000)
+++ ch01/src/test/java/edu/nf/ch01/test/SpringContainerTest.java	(date 1606700811000)
@@ -0,0 +1,41 @@
+package edu.nf.ch01.test;
+
+import edu.nf.ch01.People;
+import edu.nf.ch01.Users;
+import org.junit.Test;
+import org.springframework.context.ApplicationContext;
+import org.springframework.context.support.ClassPathXmlApplicationContext;
+
+/**
+ * @author wangl
+ * @date 2020/11/30
+ *
+ * 在Soring的框架中工厂分类两种，
+ * 一种是BeanFactory，另一种是ApplicationContext，
+ * 简单点说，BeanFactory是Spring最基础的bean工厂，
+ * 而ApplicationContext针对BeanFactory做了很多的功能扩展和增强
+ * 。官方也推荐我们使用ApplicationContext这个接口来操作Spring容器
+ */
+public class SpringContainerTest {
+
+    @Test
+    public void testGetBean(){
+        //初始化spring容器(也就是一个容器工厂)
+        ApplicationContext context = new ClassPathXmlApplicationContext("beans.xml");
+        //从容器中获取bean对象,根据id来获取
+        //Users user = (Users) context.getBean("user");
+        //使用泛型来获取
+        Users user = context.getBean("user", Users.class);
+        user.say();
+        People people = context.getBean("people", People.class);
+        people.run();
+    }
+
+    @Test
+    public void testFactoryBean(){
+        ApplicationContext context = new ClassPathXmlApplicationContext("beans.xml");
+        Users user = context.getBean("user1", Users.class);
+        user.say();
+    }
+
+}
Index: ch06/src/main/java/edu/nf/ch06/Users.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch06/src/main/java/edu/nf/ch06/Users.java	(date 1606870917000)
+++ ch06/src/main/java/edu/nf/ch06/Users.java	(date 1606870917000)
@@ -0,0 +1,68 @@
+package edu.nf.ch06;
+
+import java.util.List;
+import java.util.Map;
+import java.util.Properties;
+
+/**
+ * @author wangl
+ * @date 2020/12/2
+ */
+public class Users {
+    private String userName;
+    private Integer age;
+    private List<String> address;
+    private Map<String, String> card;
+    private Properties prop;
+
+    public Users() {
+    }
+
+    public Users(String userName, Integer age, List<String> address, Map<String, String> card, Properties prop) {
+        this.userName = userName;
+        this.age = age;
+        this.address = address;
+        this.card = card;
+        this.prop = prop;
+    }
+
+    public String getUserName() {
+        return userName;
+    }
+
+    public void setUserName(String userName) {
+        this.userName = userName;
+    }
+
+    public Integer getAge() {
+        return age;
+    }
+
+    public void setAge(Integer age) {
+        this.age = age;
+    }
+
+    public List<String> getAddress() {
+        return address;
+    }
+
+    public void setAddress(List<String> address) {
+        this.address = address;
+    }
+
+    public Map<String, String> getCard() {
+        return card;
+    }
+
+    public void setCard(Map<String, String> card) {
+        this.card = card;
+    }
+
+    public Properties getProp() {
+        return prop;
+    }
+
+    public void setProp(Properties prop) {
+        this.prop = prop;
+    }
+}
Index: ch15/src/main/java/edu/nf/ch15/aspect/UserServiceAspect.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch15/src/main/java/edu/nf/ch15/aspect/UserServiceAspect.java	(date 1607389279000)
+++ ch15/src/main/java/edu/nf/ch15/aspect/UserServiceAspect.java	(date 1607389279000)
@@ -0,0 +1,64 @@
+package edu.nf.ch15.aspect;
+
+import org.aopalliance.intercept.MethodInterceptor;
+import org.aopalliance.intercept.MethodInvocation;
+import org.springframework.aop.AfterReturningAdvice;
+import org.springframework.aop.MethodBeforeAdvice;
+import org.springframework.aop.ThrowsAdvice;
+
+import java.lang.reflect.Method;
+
+/**
+ * @author wangl
+ * @date 2020/12/8
+ * 定义切面
+ */
+public class UserServiceAspect implements MethodBeforeAdvice, AfterReturningAdvice, MethodInterceptor, ThrowsAdvice {
+
+    /**
+     * 环绕通知
+     * @param invocation
+     * @return
+     * @throws Throwable
+     */
+    @Override
+    public Object invoke(MethodInvocation invocation) throws Throwable {
+        System.out.println("环绕通知前...");
+        Object returnVal = invocation.proceed();
+        System.out.println("环绕通知后...");
+        return returnVal;
+    }
+
+    /**
+     * 后置通知
+     * @param returnValue
+     * @param method
+     * @param args
+     * @param target
+     * @throws Throwable
+     */
+    @Override
+    public void afterReturning(Object returnValue, Method method, Object[] args, Object target) throws Throwable {
+        System.out.println("后置通知...");
+    }
+
+    /**
+     * 前置通知
+     * @param method
+     * @param args
+     * @param target
+     * @throws Throwable
+     */
+    @Override
+    public void before(Method method, Object[] args, Object target) throws Throwable {
+        System.out.println("前置通知...");
+    }
+
+    /**
+     * 异常通知
+     * @param e
+     */
+    public void afterThrowing(Exception e){
+        System.out.println("异常通知, " + e.getMessage());
+    }
+}
Index: ch20/target/classes/applicationContext.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch20/target/classes/applicationContext.xml	(date 1607481235000)
+++ ch20/target/classes/applicationContext.xml	(date 1607481235000)
@@ -0,0 +1,18 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:task="http://www.springframework.org/schema/task"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">
+    <!-- 装配业务处理类 -->
+    <bean id="taskService" class="edu.nf.ch20.service.impl.TaskServiceImpl"/>
+    <!-- 装配定时任务处理器-->
+    <bean id="demoTask" class="edu.nf.ch20.job.DemoTask">
+        <property name="taskService" ref="taskService"/>
+    </bean>
+    <!-- 配置定时任务线程池，池中分配两个线程 -->
+    <task:scheduler id="scheduler" pool-size="2"/>
+    <!-- 配置定时任务, 引用定时任务线程池的id-->
+    <task:scheduled-tasks scheduler="scheduler">
+        <task:scheduled ref="demoTask" method="executeBackup" cron="0/3 * * * * ?"/>
+        <task:scheduled ref="demoTask" method="executeClean" cron="0/2 * * * * ?"/>
+    </task:scheduled-tasks>
+</beans>
\ No newline at end of file
Index: ch06/src/main/resources/beans.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch06/src/main/resources/beans.xml	(date 1606872709000)
+++ ch06/src/main/resources/beans.xml	(date 1606872709000)
@@ -0,0 +1,56 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
+
+    <bean id="user" class="edu.nf.ch06.Users">
+        <!-- 构造方法注入 -->
+        <!-- 注入值-->
+        <!--<constructor-arg name="userName" value="user1"/>
+        <constructor-arg name="age" value="21"/>-->
+        <!-- 注入list集合-->
+        <!--<constructor-arg name="address">
+            <list>
+                <value>广州</value>
+                <value>珠海</value>
+            </list>
+        </constructor-arg>-->
+        <!-- 注入map集合 -->
+        <!-- 一个entry代表一个键值对 -->
+        <!--<constructor-arg name="card">
+            <map>
+                <entry key="工行" value="14231321321321321"/>
+                <entry key="建行" value="54235433423443243"/>
+            </map>
+        </constructor-arg>-->
+        <!-- 注入Properties对象 -->
+        <!--<constructor-arg name="prop">
+            <props>
+                <prop key="aa">123456</prop>
+                <prop key="bb">345678</prop>
+            </props>
+        </constructor-arg>-->
+
+        <!-- 通过set方法注入 -->
+        <property name="userName" value="user2"/>
+        <property name="age" value="25"/>
+        <property name="address">
+            <list>
+                <value>广东</value>
+                <value>珠海</value>
+            </list>
+        </property>
+        <property name="card">
+            <map>
+                <entry key="工行" value="5432432432"/>
+                <entry key="中行" value="6534543543"/>
+            </map>
+        </property>
+        <property name="prop">
+            <props>
+                <prop key="aa">23456</prop>
+                <prop key="bb">75643</prop>
+            </props>
+        </property>
+    </bean>
+</beans>
\ No newline at end of file
Index: ch11/src/test/java/edu/nf/ch11/test/SpringTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch11/src/test/java/edu/nf/ch11/test/SpringTest.java	(date 1607045845000)
+++ ch11/src/test/java/edu/nf/ch11/test/SpringTest.java	(date 1607045845000)
@@ -0,0 +1,22 @@
+package edu.nf.ch11.test;
+
+import edu.nf.ch11.config.SpringConfig;
+import edu.nf.ch11.controller.UserController;
+import org.junit.Test;
+import org.springframework.context.ApplicationContext;
+import org.springframework.context.annotation.AnnotationConfigApplicationContext;
+
+/**
+ * @author wangl
+ * @date 2020/12/4
+ */
+public class SpringTest {
+
+    @Test
+    public void testConfig(){
+        //使用配置类后，那么应该使用另一个Spring的上下文容器
+        ApplicationContext context = new AnnotationConfigApplicationContext(SpringConfig.class);
+        UserController controller = context.getBean("userController", UserController.class);
+        controller.save();
+    }
+}
Index: ch20/src/test/java/edu/nf/ch20/test/TaskTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch20/src/test/java/edu/nf/ch20/test/TaskTest.java	(date 1607484507447)
+++ ch20/src/test/java/edu/nf/ch20/test/TaskTest.java	(date 1607484507447)
@@ -0,0 +1,19 @@
+package edu.nf.ch20.test;
+
+import org.junit.Test;
+import org.springframework.context.ApplicationContext;
+import org.springframework.context.support.ClassPathXmlApplicationContext;
+
+/**
+ * @author wangl
+ * @date 2020/12/9
+ */
+public class  TaskTest {
+
+    @Test
+    public void testTask(){
+        //容器创建后就会立即执行定时任务
+        ApplicationContext context = new ClassPathXmlApplicationContext("applicationContext.xml");
+        while(true);
+    }
+}
Index: ch01/target/classes/beans.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch01/target/classes/beans.xml	(date 1607308687000)
+++ ch01/target/classes/beans.xml	(date 1607308687000)
@@ -0,0 +1,24 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
+
+    <!-- 配置Users类，将它纳入Spring容器中管理,
+     id指定这个类在容器中的唯一标识，不可重复-->
+    <bean id="user" class="edu.nf.ch01.Users"/>
+    <bean id="people" class="edu.nf.ch01.People"/>
+
+
+    <!-- 配置自定义工厂，这个工厂本身也是纳入spring容器中管理的 -->
+    <bean id="usersFactoryBean" class="edu.nf.ch01.factory.UsersFactoryBean"/>
+    <!-- 装配这个工厂，通过它来创建Users实例,
+    factory-bean引用上面配置的工厂bean的id，
+    factory-method指定为工厂类中的build方法-->
+    <bean id="user1" factory-bean="usersFactoryBean" factory-method="build"/>
+
+
+    <!--使用工厂的静态方法来创建bean实例，
+    注意：此时的class属性指定的不是Users的完整类名，而是工厂类的完整类名，
+    然后factory-method指定工厂类中的静态方法create-->
+    <bean id="user2" class="edu.nf.ch01.factory.UsersFactory" factory-method="create"/>
+</beans>
\ No newline at end of file
Index: ch15/src/main/java/edu/nf/ch15/service/impl/UserServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch15/src/main/java/edu/nf/ch15/service/impl/UserServiceImpl.java	(date 1607388899000)
+++ ch15/src/main/java/edu/nf/ch15/service/impl/UserServiceImpl.java	(date 1607388899000)
@@ -0,0 +1,20 @@
+package edu.nf.ch15.service.impl;
+
+import edu.nf.ch15.service.UserService;
+
+/**
+ * @author wangl
+ * @date 2020/12/8
+ */
+public class UserServiceImpl implements UserService {
+
+    @Override
+    public void add() {
+        System.out.println("添加用户...");
+    }
+
+    @Override
+    public void update() {
+        System.out.println("修改用户...");
+    }
+}
Index: ch06/src/test/java/edu/nf/ch06/test/SpringTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch06/src/test/java/edu/nf/ch06/test/SpringTest.java	(date 1606871749000)
+++ ch06/src/test/java/edu/nf/ch06/test/SpringTest.java	(date 1606871749000)
@@ -0,0 +1,25 @@
+package edu.nf.ch06.test;
+
+import edu.nf.ch06.Users;
+import org.junit.Test;
+import org.springframework.context.ApplicationContext;
+import org.springframework.context.support.ClassPathXmlApplicationContext;
+
+/**
+ * @author wangl
+ * @date 2020/12/2
+ */
+public class SpringTest {
+
+    @Test
+    public void testInject(){
+        ApplicationContext context = new ClassPathXmlApplicationContext("beans.xml");
+        Users user = context.getBean("user", Users.class);
+        System.out.println(user.getUserName());
+        System.out.println(user.getAge());
+        user.getAddress().forEach(addr -> System.out.println(addr));
+        user.getCard().forEach((k, v) -> System.out.println(k +" : " + v));
+        System.out.println(user.getProp().getProperty("aa"));
+        System.out.println(user.getProp().getProperty("bb"));
+    }
+}
Index: ch06/target/classes/beans.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch06/target/classes/beans.xml	(date 1607308685000)
+++ ch06/target/classes/beans.xml	(date 1607308685000)
@@ -0,0 +1,56 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
+
+    <bean id="user" class="edu.nf.ch06.Users">
+        <!-- 构造方法注入 -->
+        <!-- 注入值-->
+        <!--<constructor-arg name="userName" value="user1"/>
+        <constructor-arg name="age" value="21"/>-->
+        <!-- 注入list集合-->
+        <!--<constructor-arg name="address">
+            <list>
+                <value>广州</value>
+                <value>珠海</value>
+            </list>
+        </constructor-arg>-->
+        <!-- 注入map集合 -->
+        <!-- 一个entry代表一个键值对 -->
+        <!--<constructor-arg name="card">
+            <map>
+                <entry key="工行" value="14231321321321321"/>
+                <entry key="建行" value="54235433423443243"/>
+            </map>
+        </constructor-arg>-->
+        <!-- 注入Properties对象 -->
+        <!--<constructor-arg name="prop">
+            <props>
+                <prop key="aa">123456</prop>
+                <prop key="bb">345678</prop>
+            </props>
+        </constructor-arg>-->
+
+        <!-- 通过set方法注入 -->
+        <property name="userName" value="user2"/>
+        <property name="age" value="25"/>
+        <property name="address">
+            <list>
+                <value>广东</value>
+                <value>珠海</value>
+            </list>
+        </property>
+        <property name="card">
+            <map>
+                <entry key="工行" value="5432432432"/>
+                <entry key="中行" value="6534543543"/>
+            </map>
+        </property>
+        <property name="prop">
+            <props>
+                <prop key="aa">23456</prop>
+                <prop key="bb">75643</prop>
+            </props>
+        </property>
+    </bean>
+</beans>
\ No newline at end of file
